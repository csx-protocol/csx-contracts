{
  "contractName": "VestedCSX",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eCsxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sCsxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_csxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdtAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CSX",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EscrowedCSX",
      "outputs": [
        {
          "internalType": "contract IERC20Burnable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StakedCSX",
      "outputs": [
        {
          "internalType": "contract IStakedCSX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestedStakingContractPerUser",
      "outputs": [
        {
          "internalType": "contract VestedStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eCsxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sCsxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_csxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CSX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EscrowedCSX\",\"outputs\":[{\"internalType\":\"contract IERC20Burnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakedCSX\",\"outputs\":[{\"internalType\":\"contract IStakedCSX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestedStakingContractPerUser\",\"outputs\":[{\"internalType\":\"contract VestedStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CSX/VestedCSX.sol\":\"VestedCSX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/CSX/Interfaces.sol\":{\"keccak256\":\"0x250ae099b39737652a39c4fab2bedb6cea67018d36d00d250678ca10aeb806f0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8aafe0fc5985038e390efbefbfd9bf106d6af150d14afd15f9405f9c29cba145\",\"dweb:/ipfs/QmbcitQffesVemcg78BhbBsexkmmW1KtHM4XBQQgCFZJ4Z\"]},\"project:/contracts/CSX/VestedCSX.sol\":{\"keccak256\":\"0x789bf61b70bc947c125508204026c805c89d43f3723da1fa70d1e42906b98154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7cc2ac5ca67e7f031c276c61f7a16eddc52c1b2c4af66491e98db04f6785c70\",\"dweb:/ipfs/QmR9T1BXZCNTVM8eTsTuX8RpfqVivFTKTt7LYpNXm5DYav\"]},\"project:/contracts/CSX/VestedStaking.sol\":{\"keccak256\":\"0x3227db69d4676ab78ac31fb6853b3b26626b21c2c51af51fe8c64d03207f4e6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586636843864c35be39355ff624d6e3ea635726b81836b80d59c24e1a0cd81be\",\"dweb:/ipfs/QmRHkQpzhsufMJc6ToxYXSNhh4ogKzn7kyoaKfbvPFMezf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200256a3803806200256a83398101604081905262000034916200015b565b6040518060400160405280600a81526020017f56657374656420435358000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f764353580000000000000000000000000000000000000000000000000000000081525060016000819055508160049081620000b99190620002b3565b506005620000c88282620002b3565b505060068054600160a060020a0319908116600160a060020a03998a161790915560078054821697891697909717909655506008805486169487169490941790935560098054851692861692909217909155600a80548416918516919091179055600b8054909216921691909117905562000386565b8051600160a060020a03811681146200015657600080fd5b919050565b60008060008060008060c087890312156200017557600080fd5b62000180876200013e565b955062000190602088016200013e565b9450620001a0604088016200013e565b9350620001b0606088016200013e565b9250620001c0608088016200013e565b9150620001d060a088016200013e565b90509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6002810460018216806200022057607f821691505b6020821081036200025a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620002ae576000818152602081206020601f86010481016020861015620002895750805b6020601f860104820191505b81811015620002aa5782815560010162000295565b5050505b505050565b815167ffffffffffffffff811115620002d057620002d0620001dc565b620002e881620002e184546200020b565b8462000260565b602080601f831160018114620003245760008415620003075750858301515b60028086026008870290910a6000190419821617865550620002aa565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b50858210156200037657878501516008601f88160260020a60001904191681555b5050505050600202600101905550565b6121d480620003966000396000f3fe60806040523480156200001157600080fd5b50600436106200019c576000357c01000000000000000000000000000000000000000000000000000000009004806379cc679011620000f5578063a9059cbb11620000b4578063c54e44eb116200008b578063c54e44eb1462000377578063dd62ed3e146200038b578063e3885a6214620003c757600080fd5b8063a9059cbb1462000338578063ad5c4648146200034f578063c1456ab0146200036357600080fd5b806379cc679014620002d857806389a3027114620002ef57806394469837146200030357806395d89b411462000317578063a457c2d7146200032157600080fd5b806332cb6b0c116200015f57806359d6613e116200013657806359d6613e14620002685780636a760b80146200029557806370a0823114620002ac57600080fd5b806332cb6b0c146200022557806339509351146200023857806342966c68146200024f57600080fd5b806306fdde0314620001a1578063095ea7b314620001c357806318160ddd14620001eb57806323b872dd14620001fe578063313ce5671462000215575b600080fd5b620001ab620003f3565b604051620001ba919062001105565b60405180910390f35b620001da620001d436600462001172565b6200048d565b6040519015158152602001620001ba565b6003545b604051908152602001620001ba565b620001da6200020f3660046200119f565b620004a9565b60405160128152602001620001ba565b620001ef6a52b7d2dcc80cd2e400000081565b620001da6200024936600462001172565b620004d1565b6200026662000260366004620011e0565b62000514565b005b6007546200027c90600160a060020a031681565b604051600160a060020a039091168152602001620001ba565b62000266620002a6366004620011e0565b62000523565b620001ef620002bd366004620011fa565b600160a060020a031660009081526001602052604090205490565b62000266620002e936600462001172565b620008b2565b6009546200027c90600160a060020a031681565b600a546200027c90600160a060020a031681565b620001ab620008cb565b620001da6200033236600462001172565b620008dc565b620001da6200034936600462001172565b6200098d565b6008546200027c90600160a060020a031681565b6006546200027c90600160a060020a031681565b600b546200027c90600160a060020a031681565b620001ef6200039c3660046200121f565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6200027c620003d8366004620011fa565b600c60205260009081526040902054600160a060020a031681565b606060048054620004049062001257565b80601f0160208091040260200160405190810160405280929190818152602001828054620004329062001257565b8015620004835780601f10620004575761010080835404028352916020019162000483565b820191906000526020600020905b8154815290600101906020018083116200046557829003601f168201915b5050505050905090565b6000336200049d8185856200099d565b60019150505b92915050565b600033620004b985828562000b00565b620004c685858562000b9a565b506001949350505050565b336000818152600260209081526040808320600160a060020a03871684529091528120549091906200049d90829086906200050e908790620012ac565b6200099d565b62000520338262000dac565b50565b806a52b7d2dcc80cd2e40000006200053a60035490565b620005469083620012ac565b11156200059d5760405160e560020a62461bcd02815260206004820152601b60248201527f616d6f756e7420737572706173736573206d617820737570706c79000000000060448201526064015b60405180910390fd5b620005a762000f28565b60008211620005fc5760405160e560020a62461bcd02815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640162000594565b6006546040517f79cc679000000000000000000000000000000000000000000000000000000000815233600482015260248101849052600160a060020a03909116906379cc679090604401600060405180830381600087803b1580156200066257600080fd5b505af115801562000677573d6000803e3d6000fd5b5050505062000687338362000f86565b336000908152600c6020526040902054600160a060020a03166200077857600754600a54600954600b546008546040513395600160a060020a03908116953095908216949082169390821692911690620006e190620010f7565b600160a060020a03978816815295871660208701529386166040860152918516606085015284166080840152831660a083015290911660c082015260e001604051809103906000f0801580156200073c573d6000803e3d6000fd5b50336000908152600c60205260409020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555b600a54336000908152600c6020526040908190205490517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0391821660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015620007f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081b9190620012e7565b50336000908152600c6020526040908190205490517fb6b55f2500000000000000000000000000000000000000000000000000000000815260048101849052600160a060020a039091169063b6b55f2590602401600060405180830381600087803b1580156200088a57600080fd5b505af11580156200089f573d6000803e3d6000fd5b50505050620008ae6001600055565b5050565b620008bf82338362000b00565b620008ae828262000dac565b606060058054620004049062001257565b336000818152600260209081526040808320600160a060020a0387168452909152812054909190838110156200097e5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840162000594565b620004c682868684036200099d565b6000336200049d81858562000b9a565b600160a060020a03831662000a1d5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840162000594565b600160a060020a03821662000a9e5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840162000594565b600160a060020a0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600160a060020a03838116600090815260026020908152604080832093861683529290522054600019811462000b94578181101562000b855760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640162000594565b62000b9484848484036200099d565b50505050565b600160a060020a03831662000c1b5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840162000594565b600160a060020a03821662000c9c5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840162000594565b62000ca98383836200105c565b600160a060020a0383166000908152600160205260409020548181101562000d3d5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840162000594565b600160a060020a0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9062000d9e9086815260200190565b60405180910390a362000b94565b600160a060020a03821662000e2d5760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840162000594565b62000e3b826000836200105c565b600160a060020a0382166000908152600160205260409020548181101562000ecf5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840162000594565b600160a060020a03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910162000af3565b60026000540362000f7f5760405160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162000594565b6002600055565b600160a060020a03821662000fe15760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000594565b62000fef600083836200105c565b8060036000828254620010039190620012ac565b9091555050600160a060020a0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600160a060020a03831615806200107a5750600160a060020a038216155b156200108557505050565b60405160e560020a62461bcd02815260206004820152603360248201527f4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e60448201527f7366657273206172652064697361626c65642e00000000000000000000000000606482015260840162000594565b610e93806200130c83390190565b600060208083528351808285015260005b81811015620011345785810183015185820160400152820162001116565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a03811681146200116d57600080fd5b919050565b600080604083850312156200118657600080fd5b620011918362001155565b946020939093013593505050565b600080600060608486031215620011b557600080fd5b620011c08462001155565b9250620011d06020850162001155565b9150604084013590509250925092565b600060208284031215620011f357600080fd5b5035919050565b6000602082840312156200120d57600080fd5b620012188262001155565b9392505050565b600080604083850312156200123357600080fd5b6200123e8362001155565b91506200124e6020840162001155565b90509250929050565b6002810460018216806200126c57607f821691505b602082108103620012a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115620004a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060208284031215620012fa57600080fd5b815180151581146200121857600080fdfe60806040523480156200001157600080fd5b5060405162000e9338038062000e938339810160408190526200003491620000d3565b60028054600160a060020a0319908116600160a060020a03998a161790915560038054821697891697909717909655600480548716958816959095179094556005805486169387169390931790925560068054851691861691909117905560078054841691851691909117905560088054909216921691909117905562000168565b8051600160a060020a0381168114620000ce57600080fd5b919050565b600080600080600080600060e0888a031215620000ef57600080fd5b620000fa88620000b6565b96506200010a60208901620000b6565b95506200011a60408901620000b6565b94506200012a60608901620000b6565b93506200013a60808901620000b6565b92506200014a60a08901620000b6565b91506200015a60c08901620000b6565b905092959891949750929550565b610d1b80620001786000396000f3fe608060405234801561001057600080fd5b50600436106100f1576000357c01000000000000000000000000000000000000000000000000000000009004806372d05a521161009e578063b6b55f2511610078578063b6b55f25146101d6578063da61ead4146101e9578063ff04c5ee146101fc57600080fd5b806372d05a521461019d578063a639a300146101b0578063a98ad46c146101c357600080fd5b806344c63eec116100cf57806344c63eec146101545780634b57b0be146101775780634bbc52f51461018a57600080fd5b80630197d972146100f657806311eac855146101145780632e1a7d4d1461013f575b600080fd5b6101016303b5380081565b6040519081526020015b60405180910390f35b60065461012790600160a060020a031681565b604051600160a060020a03909116815260200161010b565b61015261014d366004610b92565b61020f565b005b600054600154610162919082565b6040805192835260208301919091520161010b565b60085461012790600160a060020a031681565b610152610198366004610bbc565b6104d9565b60045461012790600160a060020a031681565b60055461012790600160a060020a031681565b60075461012790600160a060020a031681565b6101526101e4366004610b92565b61090d565b60025461012790600160a060020a031681565b60035461012790600160a060020a031681565b600254600160a060020a0316331461027657604051600080516020610cc6833981519152815260206004820152600b60248201527f4f6e6c79206f776e65722e00000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000548111156102d057604051600080516020610cc6833981519152815260206004820152601260248201527f4e6f7420656e6f75676820746f6b656e732e0000000000000000000000000000604482015260640161026d565b6001546102e2906303b5380090610c47565b42101561033957604051600080516020610cc6833981519152815260206004820152601860248201527f546f6b656e7320617265207374696c6c206c6f636b65642e0000000000000000604482015260640161026d565b8060008001600082825461034d9190610c60565b9091555050600480546040517f79cc6790000000000000000000000000000000000000000000000000000000008152339281019290925260248201839052600160a060020a0316906379cc679090604401600060405180830381600087803b1580156103b857600080fd5b505af11580156103cc573d6000803e3d6000fd5b50506003546040517f5d3eea9100000000000000000000000000000000000000000000000000000000815260048101859052600160a060020a039091169250635d3eea919150602401600060405180830381600087803b15801561042f57600080fd5b505af1158015610443573d6000803e3d6000fd5b50506005546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101859052600160a060020a03909116925063a9059cbb91506044016020604051808303816000875af11580156104b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d59190610c73565b5050565b600254600160a060020a0316331461053b57604051600080516020610cc6833981519152815260206004820152600b60248201527f4f6e6c79206f776e65722e000000000000000000000000000000000000000000604482015260640161026d565b6003546040517fe12f3a6100000000000000000000000000000000000000000000000000000000815230600482015260009182918291600160a060020a03169063e12f3a6190602401606060405180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190610c97565b6003546040517fd61bf3f80000000000000000000000000000000000000000000000000000000081528b151560048201528a15156024820152891515604482015288151560648201529396509194509250600160a060020a03169063d61bf3f890608401600060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b5050505086801561066757508215155b156106fc576006546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101859052600160a060020a039091169063a9059cbb906044016020604051808303816000875af11580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190610c73565b505b85801561070857508115155b1561079d576007546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101849052600160a060020a039091169063a9059cbb906044016020604051808303816000875af1158015610777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079b9190610c73565b505b8480156107a8575083155b80156107b357508015155b15610848576008546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815233600482015260248101839052600160a060020a039091169063a9059cbb906044016020604051808303816000875af1158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190610c73565b505b8480156108525750835b801561085d57508015155b1561090457604051600090339083908381818185875af1925050503d80600081146108a4576040519150601f19603f3d011682016040523d82523d6000602084013e6108a9565b606091505b505090508061090257604051600080516020610cc6833981519152815260206004820152601060248201527f5472616e73666572206661696c65642e00000000000000000000000000000000604482015260640161026d565b505b50505050505050565b600454600160a060020a0316331461096f57604051600080516020610cc6833981519152815260206004820152601360248201527f4f6e6c79207643535820636f6e74726163742e00000000000000000000000000604482015260640161026d565b6005546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101839052600160a060020a03909116906323b872dd906064016020604051808303816000875af11580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190610c73565b610a5757604051600080516020610cc6833981519152815260206004820152600f60248201527f6465706f736974206661696c65642e0000000000000000000000000000000000604482015260640161026d565b6005546003546040517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610ac5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae99190610c73565b506003546040517fa694fc3a00000000000000000000000000000000000000000000000000000000815260048101839052600160a060020a039091169063a694fc3a90602401600060405180830381600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040518060400160405280826000800154610b7c9190610c47565b8152426020918201528151600055015160015550565b600060208284031215610ba457600080fd5b5035919050565b8015158114610bb957600080fd5b50565b60008060008060808587031215610bd257600080fd5b8435610bdd81610bab565b93506020850135610bed81610bab565b92506040850135610bfd81610bab565b91506060850135610c0d81610bab565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610c5a57610c5a610c18565b92915050565b81810381811115610c5a57610c5a610c18565b600060208284031215610c8557600080fd5b8151610c9081610bab565b9392505050565b600080600060608486031215610cac57600080fd5b835192506020840151915060408401519050925092509256fe08c379a000000000000000000000000000000000000000000000000000000000a26469706673582212200049d3d7ed50a1ae7364eba6143a8b19ce5b43a08bcf889905d114b51cab600d64736f6c63430008130033a2646970667358221220031ae2050b9bf001844c907b4e38f8a620c63d32a4d3e13ffc9e05bfe60cbb7864736f6c63430008130033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3690:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:36"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:1:36",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:3:36",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:36"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:36"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:36",
                "type": ""
              }
            ],
            "src": "14:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "362:470:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "383:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "392:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "379:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "379:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "404:3:36",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "375:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:33:36"
                  },
                  "nodeType": "YulIf",
                  "src": "372:53:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "434:50:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "474:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "444:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:40:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "493:59:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "537:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "548:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "533:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "533:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "503:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:49:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:59:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "605:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "616:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "601:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "601:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "571:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:49:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "629:59:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "673:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "684:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "669:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "669:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "639:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:49:36"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "629:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "697:60:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "741:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "752:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "737:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "737:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "707:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:50:36"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "766:60:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "821:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "806:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "806:19:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "776:29:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:50:36"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "288:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "299:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "311:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "319:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "327:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "335:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "343:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "351:6:36",
                "type": ""
              }
            ],
            "src": "196:636:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "869:152:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "889:77:36",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "879:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:88:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "879:88:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "983:1:36",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:4:36",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "976:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "976:15:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1007:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:4:36",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:15:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:15:36"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "837:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1081:382:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1091:22:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1105:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1111:1:36",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1101:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1091:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1122:38:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1152:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1158:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:12:36"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1126:18:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1199:31:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1201:27:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1215:6:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1223:4:36",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1211:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1211:17:36"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1201:6:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1179:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:26:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1169:61:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:168:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1310:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:77:36",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1303:88:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1303:88:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1411:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1414:4:36",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1404:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1404:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1404:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1442:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1432:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1432:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1432:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1245:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1265:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1265:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1242:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:38:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:218:36"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1061:4:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1070:6:36",
                "type": ""
              }
            ],
            "src": "1026:437:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1524:65:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1541:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1544:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1534:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:14:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1534:14:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:26:36",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:1:36",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1578:4:36",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "1565:9:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1557:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1507:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1515:4:36",
                "type": ""
              }
            ],
            "src": "1468:121:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1675:470:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1708:431:36",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1722:11:36",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1732:1:36",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "1726:2:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1753:2:36"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1757:5:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1746:17:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1746:17:36"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1776:31:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1798:2:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1802:4:36",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "1788:9:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1788:19:36"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1780:4:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1820:60:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "1843:4:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "1857:10:36"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1869:2:36",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1853:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1853:19:36"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1874:4:36",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1849:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1849:30:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1839:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1839:41:36"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "1824:11:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1917:23:36",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1919:19:36",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1934:4:36"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1919:11:36"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "1899:10:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1911:4:36",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1896:2:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1896:20:36"
                        },
                        "nodeType": "YulIf",
                        "src": "1893:47:36"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1953:44:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "1967:4:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "1981:3:36"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1986:2:36",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1977:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1977:12:36"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1991:4:36",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1973:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1973:23:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1963:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1963:34:36"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "1957:2:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2010:24:36",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "2023:11:36"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "2014:5:36",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2108:21:36",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2117:5:36"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2124:2:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2110:6:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2110:17:36"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2110:17:36"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2058:5:36"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "2065:2:36"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "2055:2:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2055:13:36"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "2069:26:36",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2071:22:36",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2084:5:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2091:1:36",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2080:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2080:13:36"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "2071:5:36"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "2051:3:36",
                          "statements": []
                        },
                        "src": "2047:82:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "1691:3:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1696:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1688:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1688:11:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1685:454:36"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1647:5:36",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "1654:3:36",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "1659:10:36",
                "type": ""
              }
            ],
            "src": "1594:551:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2235:89:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2245:73:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "2260:4:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2278:1:36",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2274:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2274:6:36"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2286:1:36",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2293:1:36",
                                            "type": "",
                                            "value": "8"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "2296:3:36"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "2289:3:36"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2289:11:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "2282:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2282:19:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2270:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2270:32:36"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2266:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2266:37:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2256:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2256:48:36"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2310:1:36",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "2313:3:36"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2306:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:11:36"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2253:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:65:36"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "2245:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2212:4:36",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2218:3:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "2226:4:36",
                "type": ""
              }
            ],
            "src": "2150:174:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2425:1263:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2435:24:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2455:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2449:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2449:10:36"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "2439:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2502:22:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2504:16:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2504:18:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2504:18:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2474:6:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:18:36",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2471:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2471:30:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2468:56:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2577:4:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2615:4:36"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "2609:5:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2609:11:36"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "2583:25:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:38:36"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2623:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "2533:43:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2533:97:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2533:97:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2639:18:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2656:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "2643:9:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2666:23:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2685:4:36",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "2670:11:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2698:24:36",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "2711:11:36"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "2698:9:36"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2768:663:36",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2782:35:36",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "2801:6:36"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2813:2:36",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "2809:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2809:7:36"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2797:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2797:20:36"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "2786:7:36",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2830:49:36",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:4:36"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "2844:29:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2844:35:36"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "2834:6:36",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2892:10:36",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2901:1:36",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "2896:1:36",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2979:172:36",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3004:6:36"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "3022:3:36"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "3027:9:36"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3018:3:36"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3018:19:36"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3012:5:36"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3012:26:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2997:6:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2997:42:36"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2997:42:36"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3056:24:36",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3070:6:36"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3078:1:36",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3066:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3066:14:36"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3056:6:36"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3097:40:36",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3114:9:36"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3125:11:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3110:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3110:27:36"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3097:9:36"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2926:1:36"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2929:7:36"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2923:2:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2923:14:36"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "2938:28:36",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2940:24:36",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2949:1:36"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2952:11:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2945:3:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2945:19:36"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2940:1:36"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "2919:3:36",
                              "statements": []
                            },
                            "src": "2915:236:36"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3199:173:36",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3217:43:36",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "3244:3:36"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3249:9:36"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3240:3:36"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3240:19:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3234:5:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3234:26:36"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "3221:9:36",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3284:6:36"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "3296:9:36"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "3319:1:36",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3315:3:36"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3315:6:36"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "3327:1:36",
                                                        "type": "",
                                                        "value": "2"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "3334:1:36",
                                                            "type": "",
                                                            "value": "8"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "name": "newLen",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3341:6:36"
                                                              },
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "3349:2:36",
                                                                "type": "",
                                                                "value": "31"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "and",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3337:3:36"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3337:15:36"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mul",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3330:3:36"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3330:23:36"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "exp",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3323:3:36"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3323:31:36"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "div",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3311:3:36"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3311:44:36"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "3307:3:36"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3307:49:36"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3292:3:36"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3292:65:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "3277:6:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3277:81:36"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3277:81:36"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3170:7:36"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "3179:6:36"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3167:2:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3167:19:36"
                            },
                            "nodeType": "YulIf",
                            "src": "3164:208:36"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3392:4:36"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "3406:6:36"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3414:1:36",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "3402:3:36"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3402:14:36"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3418:1:36",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3398:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3398:22:36"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "3385:6:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3385:36:36"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3385:36:36"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2761:670:36",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2766:1:36",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3448:234:36",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3462:14:36",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3475:1:36",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "3466:5:36",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3511:67:36",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3529:35:36",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "3548:3:36"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3553:9:36"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3544:3:36"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3544:19:36"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3538:5:36"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3538:26:36"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "3529:5:36"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "3492:6:36"
                            },
                            "nodeType": "YulIf",
                            "src": "3489:89:36"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3598:4:36"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "3657:5:36"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:6:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "3604:52:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3604:67:36"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "3591:6:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3591:81:36"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3591:81:36"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "3440:242:36",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2741:6:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2738:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:14:36"
                  },
                  "nodeType": "YulSwitch",
                  "src": "2731:951:36"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "2410:4:36",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2416:3:36",
                "type": ""
              }
            ],
            "src": "2329:1359:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, div(add(startIndex, 31), 0x20))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, div(add(len, 31), 0x20))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(div(not(0), exp(2, mul(8, len))))), mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(div(not(0), exp(2, mul(8, and(newLen, 31)))))))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11301:36",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:36",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:36",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:36",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:36"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:36"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:36",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:36"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:36"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:36",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:36"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:36"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:36"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:36"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:36"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:36"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:36"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:36"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:36"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:36"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:36"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:36"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:36"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:36"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:36"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:36"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:36",
                    "statements": []
                  },
                  "src": "294:140:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:36"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:36",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:36"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:36"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:36",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:36"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:36"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:36",
                "type": ""
              }
            ],
            "src": "14:548:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "616:147:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "626:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "648:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "635:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:20:36"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "626:5:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "741:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "750:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "743:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "743:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "743:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "677:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "688:5:36"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "695:42:36",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "684:54:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "674:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:65:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:73:36"
                  },
                  "nodeType": "YulIf",
                  "src": "664:93:36"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "595:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:36",
                "type": ""
              }
            ],
            "src": "567:196:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "855:167:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "901:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "910:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "913:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "903:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "903:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "903:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "876:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "885:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "897:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "868:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "868:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "865:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "926:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "955:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "936:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "926:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "974:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1012:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "997:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "997:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "984:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "974:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "813:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "824:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "836:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "844:6:36",
                "type": ""
              }
            ],
            "src": "768:254:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1122:92:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1132:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1144:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1155:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1132:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1174:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1199:6:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1192:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1192:14:36"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1185:6:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1185:22:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1167:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:41:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1167:41:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1091:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1102:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1113:4:36",
                "type": ""
              }
            ],
            "src": "1027:187:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1320:76:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1330:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1342:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1353:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1338:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1338:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1330:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1372:9:36"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1383:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:25:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:25:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1289:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1300:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1311:4:36",
                "type": ""
              }
            ],
            "src": "1219:177:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1505:224:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1551:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1560:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1563:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1553:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1553:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1526:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1535:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1522:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1522:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1547:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1518:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "1515:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1576:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1586:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1576:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1624:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1668:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1634:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:42:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1708:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1719:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1704:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1704:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1691:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:32:36"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1681:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1455:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1466:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1478:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1486:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1494:6:36",
                "type": ""
              }
            ],
            "src": "1401:328:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1831:87:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1841:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1849:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1849:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1841:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1883:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1898:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:4:36",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:17:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1876:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1876:36:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1800:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1811:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1822:4:36",
                "type": ""
              }
            ],
            "src": "1734:184:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:110:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2039:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2048:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2051:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2041:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2041:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2041:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2014:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2023:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2010:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2010:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2035:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2006:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2003:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2064:33:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2087:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2074:12:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2074:23:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2064:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1959:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1970:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1982:6:36",
                "type": ""
              }
            ],
            "src": "1923:180:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2228:125:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2238:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2250:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2261:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2246:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2246:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2238:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2280:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2295:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2303:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2291:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2291:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2273:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2273:74:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IStakedCSX_$1033__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2197:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2208:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2219:4:36",
                "type": ""
              }
            ],
            "src": "2108:245:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2428:116:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2474:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2483:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2486:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2476:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2476:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2476:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2449:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2458:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2445:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2441:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2441:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "2438:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2499:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2528:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2509:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2509:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2499:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2394:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2405:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2417:6:36",
                "type": ""
              }
            ],
            "src": "2358:186:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2664:125:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2674:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2686:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2697:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2682:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2674:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2716:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2731:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2739:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2727:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2727:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2709:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2709:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2709:74:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$721__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2633:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2644:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2655:4:36",
                "type": ""
              }
            ],
            "src": "2549:240:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2908:125:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2918:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2930:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2941:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2926:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2918:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2960:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2975:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2983:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2971:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2971:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2953:74:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IWETH_$991__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2877:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2888:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2899:4:36",
                "type": ""
              }
            ],
            "src": "2794:239:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3162:125:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3172:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3184:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3195:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3180:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3172:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3214:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3229:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3237:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3225:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3225:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:74:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Burnable_$1050__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3131:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3142:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3153:4:36",
                "type": ""
              }
            ],
            "src": "3038:249:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3379:173:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3425:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3434:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3437:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3427:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3427:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3427:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3400:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3409:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3421:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3389:52:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3450:39:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3479:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3460:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:29:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3450:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3498:48:36",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3531:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3542:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3527:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3527:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3508:18:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:38:36"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3498:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3337:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3348:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3360:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3368:6:36",
                "type": ""
              }
            ],
            "src": "3292:260:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:125:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3690:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3732:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3747:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3755:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:74:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_VestedStaking_$2487__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3649:9:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3660:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3671:4:36",
                "type": ""
              }
            ],
            "src": "3557:248:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3865:382:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3875:22:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3889:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3895:1:36",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3885:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3885:12:36"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3875:6:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3906:38:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3936:4:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3942:1:36",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3932:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:12:36"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3910:18:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3983:31:36",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3985:27:36",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3999:6:36"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4007:4:36",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3995:3:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3995:17:36"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3985:6:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3963:18:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3956:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3956:26:36"
                  },
                  "nodeType": "YulIf",
                  "src": "3953:61:36"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4073:168:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4094:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4097:77:36",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4087:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4087:88:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4087:88:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4195:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4198:4:36",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4188:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4188:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4188:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4223:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4226:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4216:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4216:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4216:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4029:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4052:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4060:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4049:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4049:14:36"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4026:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4026:38:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4023:218:36"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3845:4:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3854:6:36",
                "type": ""
              }
            ],
            "src": "3810:437:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4300:231:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4310:16:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4321:1:36"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4324:1:36"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4317:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:9:36"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4310:3:36"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4357:168:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4378:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4381:77:36",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4371:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4371:88:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4371:88:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4479:1:36",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4482:4:36",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4472:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4472:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4472:15:36"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4507:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4510:4:36",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4500:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4500:15:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4500:15:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4341:1:36"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "4344:3:36"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4338:2:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4338:10:36"
                  },
                  "nodeType": "YulIf",
                  "src": "4335:190:36"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4283:1:36",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4286:1:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4292:3:36",
                "type": ""
              }
            ],
            "src": "4252:279:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4710:177:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4727:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4738:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4720:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4720:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4720:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4761:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4772:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4757:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4757:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4777:2:36",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4750:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4750:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4750:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4800:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4811:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4796:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4796:18:36"
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4816:29:36",
                        "type": "",
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4789:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4789:57:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4789:57:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4855:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4867:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4878:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4863:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4863:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4855:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4687:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4701:4:36",
                "type": ""
              }
            ],
            "src": "4536:351:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:179:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5083:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5094:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5076:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5076:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5076:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5117:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5128:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5113:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5113:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5133:2:36",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5106:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5106:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5156:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5167:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5152:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5152:18:36"
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5172:31:36",
                        "type": "",
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5145:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5145:59:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5145:59:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5213:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5225:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5236:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5221:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5221:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5213:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5043:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5057:4:36",
                "type": ""
              }
            ],
            "src": "4892:353:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5379:168:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5389:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5401:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5412:2:36",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5397:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5397:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5389:4:36"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5431:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5446:6:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5454:42:36",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5442:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5442:55:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5424:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:74:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5424:74:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5518:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5529:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5514:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5514:18:36"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5534:6:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5507:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5507:34:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5340:9:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5351:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5359:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5370:4:36",
                "type": ""
              }
            ],
            "src": "5250:297:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5821:462:36",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5831:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5843:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5854:3:36",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5839:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5839:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5831:4:36"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5867:52:36",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5877:42:36",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5871:2:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5935:9:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5950:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5958:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5946:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5946:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5928:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5928:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5928:34:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5982:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5993:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5978:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5978:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6002:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6010:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5998:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5998:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5971:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5971:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5971:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6034:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6045:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6030:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6030:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6054:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6062:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6050:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6050:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6086:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6097:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6082:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6082:18:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6106:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6114:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6102:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6102:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6075:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6075:43:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6075:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6138:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6149:3:36",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6134:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6134:19:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "6159:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6167:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6155:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6155:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6127:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:44:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6127:44:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6191:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6202:3:36",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6187:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6187:19:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "6212:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6220:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6208:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6208:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6180:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:44:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6180:44:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6244:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6255:3:36",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6240:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6240:19:36"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "6265:6:36"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6273:2:36"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6261:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6261:15:36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6233:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6233:44:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6233:44:36"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5742:9:36",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5753:6:36",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5761:6:36",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5769:6:36",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5777:6:36",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5785:6:36",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5793:6:36",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5801:6:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5812:4:36",
                "type": ""
              }
            ],
            "src": "5552:731:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6366:199:36",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6412:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6421:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6424:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6414:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6414:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6414:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6387:7:36"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6396:9:36"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6383:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6383:23:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6408:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6379:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:32:36"
                  },
                  "nodeType": "YulIf",
                  "src": "6376:52:36"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6437:29:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6456:9:36"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6450:5:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6450:16:36"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6441:5:36",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6519:16:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6528:1:36",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6531:1:36",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6521:6:36"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6521:12:36"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6521:12:36"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6488:5:36"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6509:5:36"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6502:6:36"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6502:13:36"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6495:6:36"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6495:21:36"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6485:2:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6485:32:36"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6478:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6478:40:36"
                  },
                  "nodeType": "YulIf",
                  "src": "6475:60:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6544:15:36",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6554:5:36"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6544:6:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6332:9:36",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6343:7:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6355:6:36",
                "type": ""
              }
            ],
            "src": "6288:277:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6744:227:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6761:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6772:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6754:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6754:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6754:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6795:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6806:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6791:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6791:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6811:2:36",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6784:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6784:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6784:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6834:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6830:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6830:18:36"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6850:34:36",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6823:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6823:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6823:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6905:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6916:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6901:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6901:18:36"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6921:7:36",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6894:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6894:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6894:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6938:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6950:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6961:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6946:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6946:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6938:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6721:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6735:4:36",
                "type": ""
              }
            ],
            "src": "6570:401:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7150:226:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7167:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7178:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7160:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7160:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7160:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7201:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7212:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7197:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7197:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7217:2:36",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7190:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7190:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7190:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7240:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7251:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7236:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7236:18:36"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7256:34:36",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7229:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7229:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7229:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7311:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7322:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7307:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7307:18:36"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7327:6:36",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7300:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7300:34:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7300:34:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7343:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7355:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7366:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7351:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7351:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7343:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7127:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7141:4:36",
                "type": ""
              }
            ],
            "src": "6976:400:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7555:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7572:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7583:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7565:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7565:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7565:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7606:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7617:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7602:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7602:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7622:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7595:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7595:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7595:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7645:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7656:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7641:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7641:18:36"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7661:34:36",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7634:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7634:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7634:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7716:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7727:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7712:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7712:18:36"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7732:4:36",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7705:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7705:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7746:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7758:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7769:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7754:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7754:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7746:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7532:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7546:4:36",
                "type": ""
              }
            ],
            "src": "7381:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7958:179:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7975:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7986:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7968:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7968:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7968:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8009:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8020:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8005:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8005:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8025:2:36",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7998:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7998:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7998:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8048:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8059:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8044:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8044:18:36"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8064:31:36",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8037:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8037:59:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8037:59:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8105:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8117:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8128:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8113:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8113:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8105:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7935:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7949:4:36",
                "type": ""
              }
            ],
            "src": "7784:353:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8316:227:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8333:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8344:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8326:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8326:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8326:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8367:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8378:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8363:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8363:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8383:2:36",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8356:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8356:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8356:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8406:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8417:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8402:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8402:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8422:34:36",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8395:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8395:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8395:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8477:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8488:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8473:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8473:18:36"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8493:7:36",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8466:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8466:35:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8466:35:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8510:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8522:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8518:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8518:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8510:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8293:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8307:4:36",
                "type": ""
              }
            ],
            "src": "8142:401:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8722:225:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8739:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8750:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8732:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8732:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8732:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8773:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8784:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8769:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8769:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8789:2:36",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8762:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8762:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8762:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8812:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8823:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8808:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8808:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8828:34:36",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8801:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8801:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8801:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8883:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8894:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8879:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8879:18:36"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8899:5:36",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8872:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8872:33:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8872:33:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8914:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8926:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8937:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8922:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8922:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8914:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8699:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8713:4:36",
                "type": ""
              }
            ],
            "src": "8548:399:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9126:228:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9143:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9154:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9136:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9136:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9136:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9177:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9188:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9173:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9173:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9193:2:36",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9166:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9166:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9166:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9216:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9227:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9212:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9212:18:36"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9232:34:36",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9205:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9205:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9205:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9287:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9298:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9283:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9283:18:36"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9303:8:36",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9276:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9276:36:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9276:36:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9321:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9333:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9344:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9329:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9329:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9321:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9103:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9117:4:36",
                "type": ""
              }
            ],
            "src": "8952:402:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9533:223:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9550:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9561:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9543:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9543:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9543:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9584:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9595:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9580:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9580:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9600:2:36",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9573:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9573:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9623:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9634:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9619:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9619:18:36"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9639:34:36",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9612:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9612:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9612:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9694:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9705:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9690:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9690:18:36"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9710:3:36",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9683:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:31:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9683:31:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9723:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9735:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9746:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9731:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9731:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9723:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9510:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9524:4:36",
                "type": ""
              }
            ],
            "src": "9359:397:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9935:224:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9952:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9963:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9945:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9945:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9945:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9986:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9997:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9982:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9982:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10002:2:36",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9975:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9975:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9975:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10025:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10036:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10021:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10021:18:36"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10041:34:36",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10014:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10014:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10014:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10096:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10107:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10092:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10092:18:36"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10112:4:36",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10085:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10085:32:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10085:32:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10126:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10138:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10149:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10134:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10134:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10126:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9912:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9926:4:36",
                "type": ""
              }
            ],
            "src": "9761:398:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10338:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10355:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10366:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10348:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10348:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10348:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10389:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10400:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10385:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10385:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10405:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10378:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10378:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10378:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10428:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10439:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10424:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10424:18:36"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10444:33:36",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10417:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10417:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10417:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10487:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10499:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10510:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10495:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10495:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10487:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10315:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10329:4:36",
                "type": ""
              }
            ],
            "src": "10164:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10698:181:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10715:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10726:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10749:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10760:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10745:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10745:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10765:2:36",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10738:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10738:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10738:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10788:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10799:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10784:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10784:18:36"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10804:33:36",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10777:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10777:61:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10777:61:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10847:26:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10859:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10870:2:36",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10855:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10855:18:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10847:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10675:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10689:4:36",
                "type": ""
              }
            ],
            "src": "10524:355:36"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11058:241:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11075:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11086:2:36",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11068:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11068:21:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11068:21:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11109:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11120:2:36",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11105:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11105:18:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11125:2:36",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11098:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11098:30:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11098:30:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11148:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11159:2:36",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11144:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11144:18:36"
                      },
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11164:34:36",
                        "type": "",
                        "value": "NonTransferableToken: Token tran"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11137:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11137:62:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11137:62:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11219:9:36"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11230:2:36",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11215:3:36"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11215:18:36"
                      },
                      {
                        "hexValue": "7366657273206172652064697361626c65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11235:21:36",
                        "type": "",
                        "value": "sfers are disabled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11208:6:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11208:49:36"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11208:49:36"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11266:27:36",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11278:9:36"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11289:3:36",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11274:3:36"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11274:19:36"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11266:4:36"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11035:9:36",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11049:4:36",
                "type": ""
              }
            ],
            "src": "10884:415:36"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IStakedCSX_$1033__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$721__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IWETH_$991__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Burnable_$1050__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_VestedStaking_$2487__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"amount surpasses max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"NonTransferableToken: Token tran\")\n        mstore(add(headStart, 96), \"sfers are disabled.\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 36,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "290:2709:12:-:0;;;776:489;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:1:1;1821:7;:22;;;;2050:5:2;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:2;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;1019:11:12::1;:42:::0;;-1:-1:-1;;;;;;1019:42:12;;::::1;-1:-1:-1::0;;;;;1019:42:12;;::::1;;::::0;;;1072:9:::1;:36:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1119:4:12::1;:26:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1156:4:::1;:27:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1194:3:::1;:25:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1230:4:::1;:27:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;290:2709;;14:177:36;93:13;;-1:-1:-1;;;;;135:31:36;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;837:184::-;889:77;886:1;879:88;986:4;983:1;976:15;1010:4;1007:1;1000:15;1026:437;1111:1;1101:12;;1158:1;1148:12;;;1169:61;;1223:4;1215:6;1211:17;1201:27;;1169:61;1276:2;1268:6;1265:14;1245:18;1242:38;1239:218;;1313:77;1310:1;1303:88;1414:4;1411:1;1404:15;1442:4;1439:1;1432:15;1239:218;;1026:437;;;:::o;1594:551::-;1696:2;1691:3;1688:11;1685:454;;;1732:1;1757:5;1753:2;1746:17;1802:4;1798:2;1788:19;1874:4;1869:2;1857:10;1853:19;1849:30;1843:4;1839:41;1911:4;1899:10;1896:20;1893:47;;;-1:-1:-1;1934:4:36;1893:47;1991:4;1986:2;1981:3;1977:12;1973:23;1967:4;1963:34;1953:44;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1685:454;1594:551;;;:::o;2329:1359::-;2455:3;2449:10;2482:18;2474:6;2471:30;2468:56;;;2504:18;;:::i;:::-;2533:97;2623:6;2583:38;2615:4;2609:11;2583:38;:::i;:::-;2577:4;2533:97;:::i;:::-;2685:4;;2749:2;2738:14;;2766:1;2761:670;;;;3475:1;3492:6;3489:89;;;-1:-1:-1;3544:19:36;;;3538:26;3489:89;2310:1;2306:11;;;2293:1;2289:11;;2282:19;;;-1:-1:-1;;2270:32:36;2266:37;2256:48;;2253:65;3598:4;3591:81;;2731:951;;2761:670;1541:1;1534:14;;;1578:4;1565:18;;-1:-1:-1;;2797:20:36;;;2915:236;2929:7;2926:1;2923:14;2915:236;;;3018:19;;;3012:26;2997:42;;3110:27;;;;3078:1;3066:14;;;;2945:19;;2915:236;;;2919:3;3179:6;3170:7;3167:19;3164:208;;;3240:19;;;3234:26;3334:1;3349:2;3337:15;;3330:23;3327:1;3323:31;-1:-1:-1;;3311:44:36;3307:49;3292:65;3277:81;;3164:208;-1:-1:-1;;;;;3414:1:36;3402:14;3418:1;3398:22;3385:36;;-1:-1:-1;2329:1359:36:o;:::-;290:2709:12;;;;;;",
  "deployedSourceMap": "290:2709:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:36;;1185:22;1167:41;;1155:2;1140:18;4431:197:2;1027:187:36;3242:106:2;3329:12;;3242:106;;;1365:25:36;;;1353:2;1338:18;3242:106:2;1219:177:36;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1876:36:36;;1864:2;1849:18;3091:91:2;1734:184:36;529:52:12;;566:15;529:52;;5871:234:2;;;;;;:::i;:::-;;:::i;578:89:4:-;;;;;;:::i;:::-;;:::i;:::-;;390:27:12;;;;;-1:-1:-1;;;;;390:27:12;;;;;;-1:-1:-1;;;;;2291:55:36;;;2273:74;;2261:2;2246:18;390:27:12;2108:245:36;1452:1117:12;;;;;;:::i;:::-;;:::i;3406:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;973:161:4;;;;;;:::i;:::-;;:::i;448:18:12:-;;;;;-1:-1:-1;;;;;448:18:12;;;478:17;;;;;-1:-1:-1;;;;;478:17:12;;;2365:102:2;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;424:17:12:-;;;;;-1:-1:-1;;;;;424:17:12;;;350:33;;;;;-1:-1:-1;;;;;350:33:12;;;502:18;;;;;-1:-1:-1;;;;;502:18:12;;;3974:149:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149;1374:69:12;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1374:69:12;;;2154:98:2;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:2;719:10:6;4584:7:2;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:6;5373:38:2;5389:4;719:10:6;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;719:10:6;5959:4:2;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:2;;;;;;;;;;5959:4;;719:10:6;6013:64:2;;719:10:6;;4089:27:2;;6038:38;;6066:10;;6038:38;:::i;:::-;6013:8;:64::i;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;:::-;578:89;:::o;1452:1117:12:-;1500:6;566:15;666:13;3329:12:2;;;3242:106;666:13:12;657:22;;:6;:22;:::i;:::-;:36;;635:113;;;;-1:-1:-1;;;;;635:113:12;;4738:2:36;635:113:12;;;4720:21:36;4777:2;4757:18;;;4750:30;4816:29;4796:18;;;4789:57;4863:18;;635:113:12;;;;;;;;;2261:21:1::1;:19;:21::i;:::-;1549:1:12::2;1540:6;:10;1532:52;;;::::0;-1:-1:-1;;;;;1532:52:12;;5094:2:36;1532:52:12::2;::::0;::::2;5076:21:36::0;5133:2;5113:18;;;5106:30;5172:31;5152:18;;;5145:59;5221:18;;1532:52:12::2;4892:353:36::0;1532:52:12::2;1674:11;::::0;:40:::2;::::0;;;;1695:10:::2;1674:40;::::0;::::2;5424:74:36::0;5514:18;;;5507:34;;;-1:-1:-1;;;;;1674:11:12;;::::2;::::0;:20:::2;::::0;5397:18:36;;1674:40:12::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1768:25;1774:10;1786:6;1768:5;:25::i;:::-;1909:10;1933:1;1880:40:::0;;;:28:::2;:40;::::0;;;;;-1:-1:-1;;;;;1880:40:12::2;1868:405;;2077:9;::::0;2146:3:::2;::::0;2177:4:::2;::::0;2209::::2;::::0;2241::::2;::::0;1995:266:::2;::::0;2039:10:::2;::::0;-1:-1:-1;;;;;2077:9:12;;::::2;::::0;2114:4:::2;::::0;2146:3;;::::2;::::0;2177:4;;::::2;::::0;2209;;::::2;::::0;2241;::::2;::::0;1995:266:::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;5946:15:36;;;5928:34;;5998:15;;;5993:2;5978:18;;5971:43;6050:15;;;6045:2;6030:18;;6023:43;6102:15;;;6097:2;6082:18;;6075:43;6155:15;;6149:3;6134:19;;6127:44;6208:15;;6202:3;6187:19;;6180:44;6261:15;;;6255:3;6240:19;;6233:44;5854:3;5839:19;1995:266:12::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1981:10:12::2;1952:40;::::0;;;:28:::2;:40;::::0;;;;:309;;-1:-1:-1;;1952:309:12::2;-1:-1:-1::0;;;;;1952:309:12;;;::::2;::::0;;;::::2;::::0;;1868:405:::2;2352:3;::::0;2401:10:::2;2352:3;2372:40:::0;;;:28:::2;:40;::::0;;;;;;;2352:70;;;;;-1:-1:-1;;;;;2372:40:12;;::::2;2352:70;::::0;::::2;5424:74:36::0;5514:18;;;5507:34;;;2352:3:12;::::2;::::0;:11:::2;::::0;5397:18:36;;2352:70:12::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2534:10:12::2;2505:40;::::0;;;:28:::2;:40;::::0;;;;;;;:56;;;;;::::2;::::0;::::2;1365:25:36::0;;;-1:-1:-1;;;;;2505:40:12;;::::2;::::0;:48:::2;::::0;1338:18:36;;2505:56:12::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;1452:1117:12::0;;:::o;973:161:4:-;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2365:102:2:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;719:10:6;6685:4:2;4089:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4089:27:2;;;;;;;;;;6685:4;;719:10:6;6829:15:2;6809:16;:35;;6801:85;;;;-1:-1:-1;;;;;6801:85:2;;6772:2:36;6801:85:2;;;6754:21:36;6811:2;6791:18;;;6784:30;6850:34;6830:18;;;6823:62;6921:7;6901:18;;;6894:35;6946:19;;6801:85:2;6570:401:36;6801:85:2;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:2;719:10:6;3877:2:2;3881:6;3860:9;:28::i;10504:370::-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;;;10627:68:2;;7178:2:36;10627:68:2;;;7160:21:36;7217:2;7197:18;;;7190:30;7256:34;7236:18;;;7229:62;7327:6;7307:18;;;7300:34;7351:19;;10627:68:2;6976:400:36;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;;;10705:68:2;;7583:2:36;10705:68:2;;;7565:21:36;7622:2;7602:18;;;7595:30;7661:34;7641:18;;;7634:62;7732:4;7712:18;;;7705:32;7754:19;;10705:68:2;7381:398:36;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1365:25:36;;;10835:32:2;;1338:18:36;10835:32:2;;;;;;;;10504:370;;;:::o;11155:441::-;-1:-1:-1;;;;;4089:18:2;;;11285:24;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11351:37:2;;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;;;11404:68:2;;7986:2:36;11404:68:2;;;7968:21:36;8025:2;8005:18;;;7998:30;8064:31;8044:18;;;8037:59;8113:18;;11404:68:2;7784:353:36;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;;;7591:68:2;;8344:2:36;7591:68:2;;;8326:21:36;8383:2;8363:18;;;8356:30;8422:34;8402:18;;;8395:62;8493:7;8473:18;;;8466:35;8518:19;;7591:68:2;8142:401:36;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;;;7669:64:2;;8750:2:36;7669:64:2;;;8732:21:36;8789:2;8769:18;;;8762:30;8828:34;8808:18;;;8801:62;8899:5;8879:18;;;8872:33;8922:19;;7669:64:2;8548:399:36;7669:64:2;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;;;7840:72:2;;9154:2:36;7840:72:2;;;9136:21:36;9193:2;9173:18;;;9166:30;9232:34;9212:18;;;9205:62;9303:8;9283:18;;;9276:36;9329:19;;7840:72:2;8952:402:36;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;;;;;7978:6;1365:25:36;;1353:2;1338:18;;1219:177;8210:26:2;;;;;;;;8247:37;9422:659;;-1:-1:-1;;;;;9505:21:2;;9497:67;;;;-1:-1:-1;;;;;9497:67:2;;9561:2:36;9497:67:2;;;9543:21:36;9600:2;9580:18;;;9573:30;9639:34;9619:18;;;9612:62;9710:3;9690:18;;;9683:31;9731:19;;9497:67:2;9359:397:36;9497:67:2;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;-1:-1:-1;;;;;9660:18:2;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;;;9688:71:2;;9963:2:36;9688:71:2;;;9945:21:36;10002:2;9982:18;;;9975:30;10041:34;10021:18;;;10014:62;10112:4;10092:18;;;10085:32;10134:19;;9688:71:2;9761:398:36;9688:71:2;-1:-1:-1;;;;;9793:18:2;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1365:25:36;;;9793:18:2;;;9978:37;;1338:18:36;9978:37:2;1219:177:36;2336:287:1;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;;;2460:63:1;;10366:2:36;2460:63:1;;;10348:21:36;10405:2;10385:18;;;10378:30;10444:33;10424:18;;;10417:61;10495:18;;2460:63:1;10164:355:36;2460:63:1;1759:1;2598:7;:18;2336:287::o;8567:535:2:-;-1:-1:-1;;;;;8650:21:2;;8642:65;;;;-1:-1:-1;;;;;8642:65:2;;10726:2:36;8642:65:2;;;10708:21:36;10765:2;10745:18;;;10738:30;10804:33;10784:18;;;10777:61;10855:18;;8642:65:2;10524:355:36;8642:65:2;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:2;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1365:25:36;;;8999:37:2;;1338:18:36;8999:37:2;;;;;;;1452:1117:12;;:::o;2676:320::-;-1:-1:-1;;;;;2870:18:12;;;;:38;;-1:-1:-1;;;;;;2892:16:12;;;2870:38;2866:51;;;2676:320;;;:::o;2866:51::-;2927:61;;-1:-1:-1;;;;;2927:61:12;;11086:2:36;2927:61:12;;;11068:21:36;11125:2;11105:18;;;11098:30;11164:34;11144:18;;;11137:62;11235:21;11215:18;;;11208:49;11274:19;;2927:61:12;10884:415:36;-1:-1:-1;;;;;;;;:::o;14:548:36:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:36;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:36:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:180::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;-1:-1:-1;2074:23:36;;1923:180;-1:-1:-1;1923:180:36:o;2358:186::-;2417:6;2470:2;2458:9;2449:7;2445:23;2441:32;2438:52;;;2486:1;2483;2476:12;2438:52;2509:29;2528:9;2509:29;:::i;:::-;2499:39;2358:186;-1:-1:-1;;;2358:186:36:o;3292:260::-;3360:6;3368;3421:2;3409:9;3400:7;3396:23;3392:32;3389:52;;;3437:1;3434;3427:12;3389:52;3460:29;3479:9;3460:29;:::i;:::-;3450:39;;3508:38;3542:2;3531:9;3527:18;3508:38;:::i;:::-;3498:48;;3292:260;;;;;:::o;3810:437::-;3895:1;3885:12;;3942:1;3932:12;;;3953:61;;4007:4;3999:6;3995:17;3985:27;;3953:61;4060:2;4052:6;4049:14;4029:18;4026:38;4023:218;;4097:77;4094:1;4087:88;4198:4;4195:1;4188:15;4226:4;4223:1;4216:15;4023:218;;3810:437;;;:::o;4252:279::-;4317:9;;;4338:10;;;4335:190;;;4381:77;4378:1;4371:88;4482:4;4479:1;4472:15;4510:4;4507:1;4500:15;6288:277;6355:6;6408:2;6396:9;6387:7;6383:23;6379:32;6376:52;;;6424:1;6421;6414:12;6376:52;6456:9;6450:16;6509:5;6502:13;6495:21;6488:5;6485:32;6475:60;;6531:1;6528;6521:12",
  "source": "// SPDX-License-Identifier: MIT\r\n// CSX Vesting Contract v2\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport {ERC20, IERC20, ReentrancyGuard, IWETH, IERC20Burnable} from \"./Interfaces.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\nimport \"./VestedStaking.sol\";\r\n\r\ncontract VestedCSX is ReentrancyGuard, ERC20Burnable {\r\n    IERC20Burnable public EscrowedCSX;\r\n    IStakedCSX public StakedCSX;\r\n    IWETH public WETH;\r\n    IERC20 public USDC;     \r\n    IERC20 public CSX;\r\n    IERC20 public USDT;\r\n\r\n    uint256 public constant MAX_SUPPLY = 100000000 ether;\r\n\r\n    modifier mintable(uint256 amount) {\r\n        require(\r\n            amount + totalSupply() <= MAX_SUPPLY,\r\n            \"amount surpasses max supply\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _eCsxAddress,\r\n        address _sCsxAddress,\r\n        address _wethAddress,\r\n        address _usdcAddress,\r\n        address _csxAddress,\r\n        address _usdtAddress\r\n    ) ERC20(\"Vested CSX\", \"vCSX\") {\r\n        EscrowedCSX = IERC20Burnable(_eCsxAddress);\r\n        StakedCSX = IStakedCSX(_sCsxAddress);\r\n        WETH = IWETH(_wethAddress);\r\n        USDC = IERC20(_usdcAddress);\r\n        CSX = IERC20(_csxAddress);\r\n        USDT = IERC20(_usdtAddress);\r\n    }\r\n\r\n    //=================================== EXTERNAL ==============================================\r\n\r\n    mapping(address => VestedStaking) public vestedStakingContractPerUser;\r\n\r\n    function vest(uint256 amount) external mintable(amount) nonReentrant {\r\n        require(amount > 0, \"Amount must be greater than 0\"); // To prevent users wasting gas\r\n\r\n        // Burn the deposited escrow tokens\r\n        EscrowedCSX.burnFrom(msg.sender, amount);\r\n\r\n        // Mint vCSX tokens to the user\r\n        _mint(msg.sender, amount);\r\n\r\n        // Create VestedStaking Contract if it doesn't exist\r\n        if (address(vestedStakingContractPerUser[msg.sender]) == address(0)) {\r\n            vestedStakingContractPerUser[msg.sender] = new VestedStaking(\r\n                address(msg.sender),\r\n                address(StakedCSX),\r\n                address(this),\r\n                address(CSX),\r\n                address(USDC),\r\n                address(USDT),\r\n                address(WETH)\r\n            );\r\n        } \r\n\r\n        // Approve VestedStaking Contract to transfer CSX tokens\r\n        CSX.approve(address(vestedStakingContractPerUser[msg.sender]), amount);\r\n\r\n        // Deposit CSX tokens to VestedStaking Contract for the user\r\n        vestedStakingContractPerUser[msg.sender].deposit(amount);\r\n    }\r\n\r\n    //=================================== INTERNAL ==============================================\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n        if (from == address(0) || to == address(0)) return;\r\n        revert(\"NonTransferableToken: Token transfers are disabled.\");\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Charl\\Documents\\Projects\\SteamMarket\\CSX\\csx-contracts\\contracts\\CSX\\VestedCSX.sol",
  "ast": {
    "absolutePath": "project:/contracts/CSX/VestedCSX.sol",
    "exportedSymbols": {
      "Context": [
        812
      ],
      "ERC20": [
        643
      ],
      "ERC20Burnable": [
        765
      ],
      "IERC20": [
        721
      ],
      "IERC20Burnable": [
        1050
      ],
      "IERC20Metadata": [
        790
      ],
      "IStakedCSX": [
        1033
      ],
      "IWETH": [
        991
      ],
      "ReentrancyGuard": [
        56
      ],
      "VestedCSX": [
        2152
      ],
      "VestedStaking": [
        2487
      ],
      "Vesting": [
        2163
      ]
    },
    "id": 2153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1897,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:12"
      },
      {
        "absolutePath": "project:/contracts/CSX/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 1903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 1051,
        "src": "90:87:12",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1898,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 643,
              "src": "98:5:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1899,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 721,
              "src": "105:6:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1900,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56,
              "src": "113:15:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1901,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 991,
              "src": "130:5:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1902,
              "name": "IERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1050,
              "src": "137:14:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 1904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 766,
        "src": "179:74:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CSX/VestedStaking.sol",
        "file": "./VestedStaking.sol",
        "id": 1905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 2488,
        "src": "257:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1906,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "312:15:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56,
              "src": "312:15:12"
            },
            "id": 1907,
            "nodeType": "InheritanceSpecifier",
            "src": "312:15:12"
          },
          {
            "baseName": {
              "id": 1908,
              "name": "ERC20Burnable",
              "nameLocations": [
                "329:13:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 765,
              "src": "329:13:12"
            },
            "id": 1909,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:12"
          }
        ],
        "canonicalName": "VestedCSX",
        "contractDependencies": [
          2487
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2152,
        "linearizedBaseContracts": [
          2152,
          765,
          643,
          790,
          721,
          812,
          56
        ],
        "name": "VestedCSX",
        "nameLocation": "299:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c1456ab0",
            "id": 1912,
            "mutability": "mutable",
            "name": "EscrowedCSX",
            "nameLocation": "372:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "350:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
              "typeString": "contract IERC20Burnable"
            },
            "typeName": {
              "id": 1911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1910,
                "name": "IERC20Burnable",
                "nameLocations": [
                  "350:14:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "350:14:12"
              },
              "referencedDeclaration": 1050,
              "src": "350:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                "typeString": "contract IERC20Burnable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "59d6613e",
            "id": 1915,
            "mutability": "mutable",
            "name": "StakedCSX",
            "nameLocation": "408:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "390:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakedCSX_$1033",
              "typeString": "contract IStakedCSX"
            },
            "typeName": {
              "id": 1914,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1913,
                "name": "IStakedCSX",
                "nameLocations": [
                  "390:10:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1033,
                "src": "390:10:12"
              },
              "referencedDeclaration": 1033,
              "src": "390:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                "typeString": "contract IStakedCSX"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 1918,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "437:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "424:17:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$991",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 1917,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1916,
                "name": "IWETH",
                "nameLocations": [
                  "424:5:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 991,
                "src": "424:5:12"
              },
              "referencedDeclaration": 991,
              "src": "424:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$991",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 1921,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "462:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "448:18:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1920,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1919,
                "name": "IERC20",
                "nameLocations": [
                  "448:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "448:6:12"
              },
              "referencedDeclaration": 721,
              "src": "448:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94469837",
            "id": 1924,
            "mutability": "mutable",
            "name": "CSX",
            "nameLocation": "492:3:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "478:17:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1922,
                "name": "IERC20",
                "nameLocations": [
                  "478:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "478:6:12"
              },
              "referencedDeclaration": 721,
              "src": "478:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c54e44eb",
            "id": 1927,
            "mutability": "mutable",
            "name": "USDT",
            "nameLocation": "516:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "502:18:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1926,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1925,
                "name": "IERC20",
                "nameLocations": [
                  "502:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "502:6:12"
              },
              "referencedDeclaration": 721,
              "src": "502:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 1930,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "553:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "529:52:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "529:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 1929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "566:15:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1945,
              "nodeType": "Block",
              "src": "624:144:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1935,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "657:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1936,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "666:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "666:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "657:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1939,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1930,
                          "src": "683:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "657:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        },
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        }
                      ],
                      "id": 1934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "635:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:113:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "635:113:12"
                },
                {
                  "id": 1944,
                  "nodeType": "PlaceholderStatement",
                  "src": "759:1:12"
                }
              ]
            },
            "id": 1946,
            "name": "mintable",
            "nameLocation": "599:8:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "608:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "607:16:12"
            },
            "src": "590:178:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "1008:257:12",
              "statements": [
                {
                  "expression": {
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1965,
                      "name": "EscrowedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "1019:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1967,
                          "name": "_eCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "1048:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1966,
                        "name": "IERC20Burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "1033:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Burnable_$1050_$",
                          "typeString": "type(contract IERC20Burnable)"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:28:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "src": "1019:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                      "typeString": "contract IERC20Burnable"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:42:12"
                },
                {
                  "expression": {
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1971,
                      "name": "StakedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1915,
                      "src": "1072:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1973,
                          "name": "_sCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1950,
                          "src": "1095:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1972,
                        "name": "IStakedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "1084:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakedCSX_$1033_$",
                          "typeString": "type(contract IStakedCSX)"
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:24:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "src": "1072:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                      "typeString": "contract IStakedCSX"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:36:12"
                },
                {
                  "expression": {
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1977,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1918,
                      "src": "1119:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1979,
                          "name": "_wethAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "1132:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1978,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1126:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$991_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 1980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1126:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "1119:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$991",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 1982,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:26:12"
                },
                {
                  "expression": {
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1983,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "1156:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1985,
                          "name": "_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "1170:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1984,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1163:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1163:20:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1156:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:27:12"
                },
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1989,
                      "name": "CSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "1194:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1991,
                          "name": "_csxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1956,
                          "src": "1207:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1990,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1200:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1200:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1194:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:25:12"
                },
                {
                  "expression": {
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1995,
                      "name": "USDT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "1230:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1997,
                          "name": "_usdtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1958,
                          "src": "1244:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1996,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1237:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:20:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1230:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:27:12"
                }
              ]
            },
            "id": 2002,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56657374656420435358",
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "986:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ac08263165eaf05a47767247310056c2342d52319a188d54c7e66cbb296e2b5",
                      "typeString": "literal_string \"Vested CSX\""
                    },
                    "value": "Vested CSX"
                  },
                  {
                    "hexValue": "76435358",
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1000:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_95045c7b9cd123e9e5af8c43e9b9f456115dc89d06cb7b1a5fa2b306609d1377",
                      "typeString": "literal_string \"vCSX\""
                    },
                    "value": "vCSX"
                  }
                ],
                "id": 1963,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1960,
                  "name": "ERC20",
                  "nameLocations": [
                    "980:5:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 643,
                  "src": "980:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "980:27:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "_eCsxAddress",
                  "nameLocation": "806:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "798:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "_sCsxAddress",
                  "nameLocation": "837:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "829:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "868:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "860:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "899:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "891:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "_csxAddress",
                  "nameLocation": "930:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "922:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1958,
                  "mutability": "mutable",
                  "name": "_usdtAddress",
                  "nameLocation": "960:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "952:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:192:12"
            },
            "returnParameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:12"
            },
            "scope": 2152,
            "src": "776:489:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3885a62",
            "id": 2007,
            "mutability": "mutable",
            "name": "vestedStakingContractPerUser",
            "nameLocation": "1415:28:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "1374:69:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
              "typeString": "mapping(address => contract VestedStaking)"
            },
            "typeName": {
              "id": 2006,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2003,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1382:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1374:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                "typeString": "mapping(address => contract VestedStaking)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2005,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2004,
                  "name": "VestedStaking",
                  "nameLocations": [
                    "1393:13:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2487,
                  "src": "1393:13:12"
                },
                "referencedDeclaration": 2487,
                "src": "1393:13:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_VestedStaking_$2487",
                  "typeString": "contract VestedStaking"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "1521:1048:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2018,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2009,
                          "src": "1540:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1549:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1540:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1552:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 2017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1532:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:52:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1695:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1699:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1695:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2029,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "1707:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2024,
                        "name": "EscrowedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1674:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                          "typeString": "contract IERC20Burnable"
                        }
                      },
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:8:12",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "1674:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2033,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1774:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1778:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1774:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2035,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "1786:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2032,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "1768:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2037,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:25:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 2040,
                            "name": "vestedStakingContractPerUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2007,
                            "src": "1880:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                              "typeString": "mapping(address => contract VestedStaking)"
                            }
                          },
                          "id": 2043,
                          "indexExpression": {
                            "expression": {
                              "id": 2041,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1909:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1913:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1909:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1880:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        ],
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1872:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1872:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1872:49:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1933:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1925:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1925:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1925:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1872:63:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2090,
                  "nodeType": "IfStatement",
                  "src": "1868:405:12",
                  "trueBody": {
                    "id": 2089,
                    "nodeType": "Block",
                    "src": "1937:336:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2050,
                              "name": "vestedStakingContractPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "1952:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "mapping(address => contract VestedStaking)"
                              }
                            },
                            "id": 2053,
                            "indexExpression": {
                              "expression": {
                                "id": 2051,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1981:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1985:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1981:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1952:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2059,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2039:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2043:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2039:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2031:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2057,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2031:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2031:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2064,
                                    "name": "StakedCSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1915,
                                    "src": "2077:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  ],
                                  "id": 2063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2069:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2062,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2069:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2069:18:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2068,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2114:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2152",
                                      "typeString": "contract VestedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2152",
                                      "typeString": "contract VestedCSX"
                                    }
                                  ],
                                  "id": 2067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2106:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2066,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2106:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2106:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2072,
                                    "name": "CSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2146:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2138:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2070,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2138:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2138:12:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2076,
                                    "name": "USDC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1921,
                                    "src": "2177:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2169:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2074,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2169:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2169:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2080,
                                    "name": "USDT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1927,
                                    "src": "2209:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2201:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2078,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2201:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2201:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2084,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1918,
                                    "src": "2241:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  ],
                                  "id": 2083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2233:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2082,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2233:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2233:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1995:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "function (address,address,address,address,address,address,address) returns (contract VestedStaking)"
                              },
                              "typeName": {
                                "id": 2055,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2054,
                                  "name": "VestedStaking",
                                  "nameLocations": [
                                    "1999:13:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2487,
                                  "src": "1999:13:12"
                                },
                                "referencedDeclaration": 2487,
                                "src": "1999:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestedStaking_$2487",
                                  "typeString": "contract VestedStaking"
                                }
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1995:266:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          },
                          "src": "1952:309:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:309:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2096,
                              "name": "vestedStakingContractPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "2372:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "mapping(address => contract VestedStaking)"
                              }
                            },
                            "id": 2099,
                            "indexExpression": {
                              "expression": {
                                "id": 2097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2401:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2405:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2401:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2372:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          ],
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2364:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2364:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2364:49:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2101,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "2415:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2091,
                        "name": "CSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "2352:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$721",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2356:7:12",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "2352:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:70:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:70:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2109,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "2554:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2104,
                          "name": "vestedStakingContractPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2007,
                          "src": "2505:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                            "typeString": "mapping(address => contract VestedStaking)"
                          }
                        },
                        "id": 2107,
                        "indexExpression": {
                          "expression": {
                            "id": 2105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2534:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2538:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2534:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2505:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VestedStaking_$2487",
                          "typeString": "contract VestedStaking"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2546:7:12",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2320,
                      "src": "2505:48:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:56:12"
                }
              ]
            },
            "functionSelector": "6a760b80",
            "id": 2113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2012,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2009,
                    "src": "1500:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2011,
                  "name": "mintable",
                  "nameLocations": [
                    "1491:8:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1946,
                  "src": "1491:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1491:16:12"
              },
              {
                "id": 2015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2014,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1508:12:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1508:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1508:12:12"
              }
            ],
            "name": "vest",
            "nameLocation": "1461:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1474:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1466:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:16:12"
            },
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:0:12"
            },
            "scope": 2152,
            "src": "1452:1117:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              631
            ],
            "body": {
              "id": 2150,
              "nodeType": "Block",
              "src": "2800:196:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2126,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2838:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2127,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "2844:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "2848:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2123,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2811:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VestedCSX_$2152_$",
                          "typeString": "type(contract super VestedCSX)"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2817:20:12",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 631,
                      "src": "2811:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:44:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2131,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2870:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2886:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2878:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2878:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2878:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2870:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "2892:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2906:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2898:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2898:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2898:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2892:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2870:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2145,
                  "nodeType": "IfStatement",
                  "src": "2866:51:12",
                  "trueBody": {
                    "functionReturnParameters": 2122,
                    "id": 2144,
                    "nodeType": "Return",
                    "src": "2910:7:12"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e7366657273206172652064697361626c65642e",
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:53:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        },
                        "value": "NonTransferableToken: Token transfers are disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        }
                      ],
                      "id": 2146,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2927:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2927:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:61:12"
                }
              ]
            },
            "id": 2151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2685:20:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2121,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2791:8:12"
            },
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2724:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2716:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2747:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2739:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2768:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2760:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:76:12"
            },
            "returnParameters": {
              "id": 2122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:0:12"
            },
            "scope": 2152,
            "src": "2676:320:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2153,
        "src": "290:2709:12",
        "usedErrors": []
      }
    ],
    "src": "63:2938:12"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CSX/VestedCSX.sol",
    "exportedSymbols": {
      "Context": [
        812
      ],
      "ERC20": [
        643
      ],
      "ERC20Burnable": [
        765
      ],
      "IERC20": [
        721
      ],
      "IERC20Burnable": [
        1050
      ],
      "IERC20Metadata": [
        790
      ],
      "IStakedCSX": [
        1033
      ],
      "IWETH": [
        991
      ],
      "ReentrancyGuard": [
        56
      ],
      "VestedCSX": [
        2152
      ],
      "VestedStaking": [
        2487
      ],
      "Vesting": [
        2163
      ]
    },
    "id": 2153,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1897,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:12"
      },
      {
        "absolutePath": "project:/contracts/CSX/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 1903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 1051,
        "src": "90:87:12",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1898,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 643,
              "src": "98:5:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1899,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 721,
              "src": "105:6:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1900,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56,
              "src": "113:15:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1901,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 991,
              "src": "130:5:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1902,
              "name": "IERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1050,
              "src": "137:14:12",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 1904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 766,
        "src": "179:74:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CSX/VestedStaking.sol",
        "file": "./VestedStaking.sol",
        "id": 1905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2153,
        "sourceUnit": 2488,
        "src": "257:29:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1906,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "312:15:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56,
              "src": "312:15:12"
            },
            "id": 1907,
            "nodeType": "InheritanceSpecifier",
            "src": "312:15:12"
          },
          {
            "baseName": {
              "id": 1908,
              "name": "ERC20Burnable",
              "nameLocations": [
                "329:13:12"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 765,
              "src": "329:13:12"
            },
            "id": 1909,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:12"
          }
        ],
        "canonicalName": "VestedCSX",
        "contractDependencies": [
          2487
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2152,
        "linearizedBaseContracts": [
          2152,
          765,
          643,
          790,
          721,
          812,
          56
        ],
        "name": "VestedCSX",
        "nameLocation": "299:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c1456ab0",
            "id": 1912,
            "mutability": "mutable",
            "name": "EscrowedCSX",
            "nameLocation": "372:11:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "350:33:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
              "typeString": "contract IERC20Burnable"
            },
            "typeName": {
              "id": 1911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1910,
                "name": "IERC20Burnable",
                "nameLocations": [
                  "350:14:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1050,
                "src": "350:14:12"
              },
              "referencedDeclaration": 1050,
              "src": "350:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                "typeString": "contract IERC20Burnable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "59d6613e",
            "id": 1915,
            "mutability": "mutable",
            "name": "StakedCSX",
            "nameLocation": "408:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "390:27:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakedCSX_$1033",
              "typeString": "contract IStakedCSX"
            },
            "typeName": {
              "id": 1914,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1913,
                "name": "IStakedCSX",
                "nameLocations": [
                  "390:10:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1033,
                "src": "390:10:12"
              },
              "referencedDeclaration": 1033,
              "src": "390:10:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                "typeString": "contract IStakedCSX"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 1918,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "437:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "424:17:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$991",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 1917,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1916,
                "name": "IWETH",
                "nameLocations": [
                  "424:5:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 991,
                "src": "424:5:12"
              },
              "referencedDeclaration": 991,
              "src": "424:5:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$991",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 1921,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "462:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "448:18:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1920,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1919,
                "name": "IERC20",
                "nameLocations": [
                  "448:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "448:6:12"
              },
              "referencedDeclaration": 721,
              "src": "448:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94469837",
            "id": 1924,
            "mutability": "mutable",
            "name": "CSX",
            "nameLocation": "492:3:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "478:17:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1923,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1922,
                "name": "IERC20",
                "nameLocations": [
                  "478:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "478:6:12"
              },
              "referencedDeclaration": 721,
              "src": "478:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c54e44eb",
            "id": 1927,
            "mutability": "mutable",
            "name": "USDT",
            "nameLocation": "516:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "502:18:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 1926,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1925,
                "name": "IERC20",
                "nameLocations": [
                  "502:6:12"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "502:6:12"
              },
              "referencedDeclaration": 721,
              "src": "502:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 1930,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "553:10:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "529:52:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1928,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "529:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 1929,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "566:15:12",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1945,
              "nodeType": "Block",
              "src": "624:144:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1935,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1932,
                            "src": "657:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1936,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "666:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "666:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "657:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1939,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1930,
                          "src": "683:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "657:36:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "708:29:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        },
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        }
                      ],
                      "id": 1934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "635:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "635:113:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "635:113:12"
                },
                {
                  "id": 1944,
                  "nodeType": "PlaceholderStatement",
                  "src": "759:1:12"
                }
              ]
            },
            "id": 1946,
            "name": "mintable",
            "nameLocation": "599:8:12",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "616:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "608:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "607:16:12"
            },
            "src": "590:178:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2001,
              "nodeType": "Block",
              "src": "1008:257:12",
              "statements": [
                {
                  "expression": {
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1965,
                      "name": "EscrowedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1912,
                      "src": "1019:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1967,
                          "name": "_eCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1948,
                          "src": "1048:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1966,
                        "name": "IERC20Burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "1033:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Burnable_$1050_$",
                          "typeString": "type(contract IERC20Burnable)"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1033:28:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "src": "1019:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                      "typeString": "contract IERC20Burnable"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:42:12"
                },
                {
                  "expression": {
                    "id": 1975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1971,
                      "name": "StakedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1915,
                      "src": "1072:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1973,
                          "name": "_sCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1950,
                          "src": "1095:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1972,
                        "name": "IStakedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "1084:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakedCSX_$1033_$",
                          "typeString": "type(contract IStakedCSX)"
                        }
                      },
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1084:24:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "src": "1072:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                      "typeString": "contract IStakedCSX"
                    }
                  },
                  "id": 1976,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:36:12"
                },
                {
                  "expression": {
                    "id": 1981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1977,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1918,
                      "src": "1119:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1979,
                          "name": "_wethAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1952,
                          "src": "1132:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1978,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1126:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$991_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 1980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1126:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "1119:26:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$991",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 1982,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:26:12"
                },
                {
                  "expression": {
                    "id": 1987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1983,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1921,
                      "src": "1156:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1985,
                          "name": "_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "1170:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1984,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1163:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1163:20:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1156:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1988,
                  "nodeType": "ExpressionStatement",
                  "src": "1156:27:12"
                },
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1989,
                      "name": "CSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1924,
                      "src": "1194:3:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1991,
                          "name": "_csxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1956,
                          "src": "1207:11:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1990,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1200:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1200:19:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1194:25:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:25:12"
                },
                {
                  "expression": {
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1995,
                      "name": "USDT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "1230:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1997,
                          "name": "_usdtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1958,
                          "src": "1244:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1996,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1237:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:20:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1230:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2000,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:27:12"
                }
              ]
            },
            "id": 2002,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56657374656420435358",
                    "id": 1961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "986:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ac08263165eaf05a47767247310056c2342d52319a188d54c7e66cbb296e2b5",
                      "typeString": "literal_string \"Vested CSX\""
                    },
                    "value": "Vested CSX"
                  },
                  {
                    "hexValue": "76435358",
                    "id": 1962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1000:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_95045c7b9cd123e9e5af8c43e9b9f456115dc89d06cb7b1a5fa2b306609d1377",
                      "typeString": "literal_string \"vCSX\""
                    },
                    "value": "vCSX"
                  }
                ],
                "id": 1963,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1960,
                  "name": "ERC20",
                  "nameLocations": [
                    "980:5:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 643,
                  "src": "980:5:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "980:27:12"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1948,
                  "mutability": "mutable",
                  "name": "_eCsxAddress",
                  "nameLocation": "806:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "798:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "_sCsxAddress",
                  "nameLocation": "837:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "829:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "868:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "860:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "899:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "891:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1956,
                  "mutability": "mutable",
                  "name": "_csxAddress",
                  "nameLocation": "930:11:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "922:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1958,
                  "mutability": "mutable",
                  "name": "_usdtAddress",
                  "nameLocation": "960:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "952:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:192:12"
            },
            "returnParameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:12"
            },
            "scope": 2152,
            "src": "776:489:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3885a62",
            "id": 2007,
            "mutability": "mutable",
            "name": "vestedStakingContractPerUser",
            "nameLocation": "1415:28:12",
            "nodeType": "VariableDeclaration",
            "scope": 2152,
            "src": "1374:69:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
              "typeString": "mapping(address => contract VestedStaking)"
            },
            "typeName": {
              "id": 2006,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2003,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1382:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1374:33:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                "typeString": "mapping(address => contract VestedStaking)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2005,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2004,
                  "name": "VestedStaking",
                  "nameLocations": [
                    "1393:13:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2487,
                  "src": "1393:13:12"
                },
                "referencedDeclaration": 2487,
                "src": "1393:13:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_VestedStaking_$2487",
                  "typeString": "contract VestedStaking"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "1521:1048:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2018,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2009,
                          "src": "1540:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1549:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1540:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1552:31:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 2017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1532:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:52:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "1532:52:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1695:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1699:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1695:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2029,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "1707:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2024,
                        "name": "EscrowedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "1674:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Burnable_$1050",
                          "typeString": "contract IERC20Burnable"
                        }
                      },
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:8:12",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1049,
                      "src": "1674:20:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:40:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2031,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:40:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2033,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1774:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1778:6:12",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1774:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2035,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "1786:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2032,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "1768:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:25:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2037,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:25:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 2040,
                            "name": "vestedStakingContractPerUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2007,
                            "src": "1880:28:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                              "typeString": "mapping(address => contract VestedStaking)"
                            }
                          },
                          "id": 2043,
                          "indexExpression": {
                            "expression": {
                              "id": 2041,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1909:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1913:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1909:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1880:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        ],
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1872:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2038,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1872:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1872:49:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1933:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1925:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1925:7:12",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1925:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1872:63:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2090,
                  "nodeType": "IfStatement",
                  "src": "1868:405:12",
                  "trueBody": {
                    "id": 2089,
                    "nodeType": "Block",
                    "src": "1937:336:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2050,
                              "name": "vestedStakingContractPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "1952:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "mapping(address => contract VestedStaking)"
                              }
                            },
                            "id": 2053,
                            "indexExpression": {
                              "expression": {
                                "id": 2051,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1981:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1985:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1981:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1952:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2059,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2039:3:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2043:6:12",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2039:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2031:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2057,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2031:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2031:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2064,
                                    "name": "StakedCSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1915,
                                    "src": "2077:9:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1033",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  ],
                                  "id": 2063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2069:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2062,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2069:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2069:18:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2068,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2114:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2152",
                                      "typeString": "contract VestedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2152",
                                      "typeString": "contract VestedCSX"
                                    }
                                  ],
                                  "id": 2067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2106:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2066,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2106:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2106:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2072,
                                    "name": "CSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1924,
                                    "src": "2146:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2071,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2138:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2070,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2138:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2138:12:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2076,
                                    "name": "USDC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1921,
                                    "src": "2177:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2169:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2074,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2169:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2169:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2080,
                                    "name": "USDT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1927,
                                    "src": "2209:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2201:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2078,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2201:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2201:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2084,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1918,
                                    "src": "2241:4:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  ],
                                  "id": 2083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2233:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2082,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2233:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2233:13:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1995:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "function (address,address,address,address,address,address,address) returns (contract VestedStaking)"
                              },
                              "typeName": {
                                "id": 2055,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2054,
                                  "name": "VestedStaking",
                                  "nameLocations": [
                                    "1999:13:12"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2487,
                                  "src": "1999:13:12"
                                },
                                "referencedDeclaration": 2487,
                                "src": "1999:13:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestedStaking_$2487",
                                  "typeString": "contract VestedStaking"
                                }
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1995:266:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          },
                          "src": "1952:309:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedStaking_$2487",
                            "typeString": "contract VestedStaking"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:309:12"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2096,
                              "name": "vestedStakingContractPerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "2372:28:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                                "typeString": "mapping(address => contract VestedStaking)"
                              }
                            },
                            "id": 2099,
                            "indexExpression": {
                              "expression": {
                                "id": 2097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2401:3:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2405:6:12",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2401:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2372:40:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestedStaking_$2487",
                              "typeString": "contract VestedStaking"
                            }
                          ],
                          "id": 2095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2364:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2364:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2364:49:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2101,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "2415:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2091,
                        "name": "CSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "2352:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$721",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2356:7:12",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "2352:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:70:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:70:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2109,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "2554:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2104,
                          "name": "vestedStakingContractPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2007,
                          "src": "2505:28:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedStaking_$2487_$",
                            "typeString": "mapping(address => contract VestedStaking)"
                          }
                        },
                        "id": 2107,
                        "indexExpression": {
                          "expression": {
                            "id": 2105,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2534:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2538:6:12",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2534:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2505:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VestedStaking_$2487",
                          "typeString": "contract VestedStaking"
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2546:7:12",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2320,
                      "src": "2505:48:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:56:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:56:12"
                }
              ]
            },
            "functionSelector": "6a760b80",
            "id": 2113,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2012,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2009,
                    "src": "1500:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2011,
                  "name": "mintable",
                  "nameLocations": [
                    "1491:8:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1946,
                  "src": "1491:8:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1491:16:12"
              },
              {
                "id": 2015,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2014,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1508:12:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1508:12:12"
                },
                "nodeType": "ModifierInvocation",
                "src": "1508:12:12"
              }
            ],
            "name": "vest",
            "nameLocation": "1461:4:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1474:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2113,
                  "src": "1466:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:16:12"
            },
            "returnParameters": {
              "id": 2016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1521:0:12"
            },
            "scope": 2152,
            "src": "1452:1117:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              631
            ],
            "body": {
              "id": 2150,
              "nodeType": "Block",
              "src": "2800:196:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2126,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2838:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2127,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "2844:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2128,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2119,
                        "src": "2848:6:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2123,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2811:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VestedCSX_$2152_$",
                          "typeString": "type(contract super VestedCSX)"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2817:20:12",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 631,
                      "src": "2811:26:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:44:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2130,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:44:12"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2131,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "2870:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2886:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2878:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2878:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2878:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2870:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "2892:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2906:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2898:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2898:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2898:10:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2892:16:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2870:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2145,
                  "nodeType": "IfStatement",
                  "src": "2866:51:12",
                  "trueBody": {
                    "functionReturnParameters": 2122,
                    "id": 2144,
                    "nodeType": "Return",
                    "src": "2910:7:12"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e7366657273206172652064697361626c65642e",
                        "id": 2147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2934:53:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        },
                        "value": "NonTransferableToken: Token transfers are disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        }
                      ],
                      "id": 2146,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2927:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2927:61:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2149,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:61:12"
                }
              ]
            },
            "id": 2151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2685:20:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2121,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2791:8:12"
            },
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2724:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2716:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2747:2:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2739:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2768:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 2151,
                  "src": "2760:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2760:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:76:12"
            },
            "returnParameters": {
              "id": 2122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2800:0:12"
            },
            "scope": 2152,
            "src": "2676:320:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2153,
        "src": "290:2709:12",
        "usedErrors": []
      }
    ],
    "src": "63:2938:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xdf176BE360c37913D55a6059236f118F56523434",
      "transactionHash": "0xeaa8aed6b87f2f50006b9faab6268aebead8c9dd4c17844cf5c0c26e96eca843"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2023-05-26T09:22:03.152Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}