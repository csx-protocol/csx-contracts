{
  "contractName": "VestedCSX",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eCsxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sCsxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_csxAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdtAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CSX",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "EscrowedCSX",
      "outputs": [
        {
          "internalType": "contract IERC20Burnable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "StakedCSX",
      "outputs": [
        {
          "internalType": "contract IStakedCSX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "USDC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingContracts",
      "outputs": [
        {
          "internalType": "contract VestedCSXStakingContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eCsxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sCsxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_csxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CSX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EscrowedCSX\",\"outputs\":[{\"internalType\":\"contract IERC20Burnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakedCSX\",\"outputs\":[{\"internalType\":\"contract IStakedCSX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingContracts\",\"outputs\":[{\"internalType\":\"contract VestedCSXStakingContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CSX/VestedCSX.sol\":\"VestedCSX\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/CSX/Interfaces.sol\":{\"keccak256\":\"0xcb4bb294c154184cfa0317627096107444abc9aec0ebb896468e2c4c9228d147\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0f39ab66d5ad47de8371d53f9be81a7eb107f0a26554696fd2f0878f8a1f310d\",\"dweb:/ipfs/QmTgbEBfH1qunYDacmNcht4JSCfFhEPdZpnLW56Bccgcoi\"]},\"project:/contracts/CSX/StakedCSXContract.sol\":{\"keccak256\":\"0x8e39c5ca5c4bed816bd511979946099ea643ff87633a7f60849143ba234767ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ee9d7193699d58e8edf61c006107af43f3a7c6b4458f113d6fe1d7ec57a54ed\",\"dweb:/ipfs/QmbQ2Py9jenH8vnCm9EFadNyeSinNrdqo4LEcfvPE5JpH2\"]},\"project:/contracts/CSX/VestedCSX.sol\":{\"keccak256\":\"0xb7d20b4ae26b570c048e422bfd4c0dd49b60b7b29a28ce57ef7c54f0ae078acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://083c9c773e5384563f975170ace37637591e6e1d459379e361a0c068cb53bac5\",\"dweb:/ipfs/QmazYXZD6mNe1wTod5unX5D81hKGgsFjk8NMXpExRCQZNN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021b1380380620021b183398101604081905262000034916200015b565b6040518060400160405280600a81526020017f56657374656420435358000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f764353580000000000000000000000000000000000000000000000000000000081525060016000819055508160049081620000b99190620002b3565b506005620000c88282620002b3565b505060068054600160a060020a0319908116600160a060020a03998a161790915560078054821697891697909717909655506008805486169487169490941790935560098054851692861692909217909155600a80548416918516919091179055600b8054909216921691909117905562000386565b8051600160a060020a03811681146200015657600080fd5b919050565b60008060008060008060c087890312156200017557600080fd5b62000180876200013e565b955062000190602088016200013e565b9450620001a0604088016200013e565b9350620001b0606088016200013e565b9250620001c0608088016200013e565b9150620001d060a088016200013e565b90509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6002810460018216806200022057607f821691505b6020821081036200025a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115620002ae576000818152602081206020601f86010481016020861015620002895750805b6020601f860104820191505b81811015620002aa5782815560010162000295565b5050505b505050565b815167ffffffffffffffff811115620002d057620002d0620001dc565b620002e881620002e184546200020b565b8462000260565b602080601f831160018114620003245760008415620003075750858301515b60028086026008870290910a6000190419821617865550620002aa565b600085815260208120601f198616915b82811015620003555788860151825594840194600190910190840162000334565b50858210156200037657878501516008601f88160260020a60001904191681555b5050505050600202600101905550565b611e1b80620003966000396000f3fe60806040523480156200001157600080fd5b50600436106200012d5760e060020a600035046306fdde03811462000132578063095ea7b3146200015457806318160ddd146200017c57806323b872dd146200018f578063313ce56714620001a657806332cb6b0c14620001b65780633950935114620001c957806342966c6814620001e057806359d6613e14620001f95780636a760b80146200022657806370a08231146200023d57806379cc6790146200026957806389a30271146200028057806394469837146200029457806395d89b4114620002a85780639bc181d214620002b2578063a457c2d714620002de578063a9059cbb14620002f5578063ad5c4648146200030c578063c1456ab01462000320578063c54e44eb1462000334578063dd62ed3e1462000348575b600080fd5b6200013c6200035f565b6040516200014b919062000f1d565b60405180910390f35b6200016b6200016536600462000f8a565b620003f9565b60405190151581526020016200014b565b6003545b6040519081526020016200014b565b6200016b620001a036600462000fb7565b62000415565b604051601281526020016200014b565b620001806a52b7d2dcc80cd2e400000081565b6200016b620001da36600462000f8a565b6200043d565b620001f7620001f136600462000ff8565b62000465565b005b6007546200020d90600160a060020a031681565b604051600160a060020a0390911681526020016200014b565b620001f76200023736600462000ff8565b62000474565b620001806200024e36600462001012565b600160a060020a031660009081526001602052604090205490565b620001f76200027a36600462000f8a565b620007b8565b6009546200020d90600160a060020a031681565b600a546200020d90600160a060020a031681565b6200013c620007d1565b6200020d620002c336600462001012565b600c60205260009081526040902054600160a060020a031681565b6200016b620002ef36600462000f8a565b620007e2565b6200016b6200030636600462000f8a565b62000869565b6008546200020d90600160a060020a031681565b6006546200020d90600160a060020a031681565b600b546200020d90600160a060020a031681565b620001806200035936600462001037565b62000879565b60606004805462000370906200106f565b80601f01602080910402602001604051908101604052809291908181526020018280546200039e906200106f565b8015620003ef5780601f10620003c357610100808354040283529160200191620003ef565b820191906000526020600020905b815481529060010190602001808311620003d157829003601f168201915b5050505050905090565b60003362000409818585620008a4565b60019150505b92915050565b60003362000425858285620009d9565b6200043285858562000a5d565b506001949350505050565b6000336200040981858562000453838362000879565b6200045f9190620010af565b620008a4565b62000471338262000c1e565b50565b806a52b7d2dcc80cd2e40000006200048b60035490565b620004979083620010af565b1115620004ee5760405160e560020a62461bcd02815260206004820152601b60248201527f616d6f756e7420737572706173736573206d617820737570706c79000000000060448201526064015b60405180910390fd5b620004f862000d58565b600082116200054d5760405160e560020a62461bcd02815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401620004e5565b60065460405160e460020a63079cc679028152600160a060020a03909116906379cc679090620005849033908690600401620010d5565b600060405180830381600087803b1580156200059f57600080fd5b505af1158015620005b4573d6000803e3d6000fd5b50505050620005c4338362000db6565b336000908152600c6020526040902054600160a060020a0316620006a857600754600a54600954600b546008546040513395600160a060020a039081169530959082169490821693908216929116906200061e9062000f0f565b600160a060020a03978816815295871660208701529386166040860152918516606085015284166080840152831660a083015290911660c082015260e001604051809103906000f08015801562000679573d6000803e3d6000fd5b50336000908152600c602052604090208054600160a060020a031916600160a060020a03929092169190911790555b600a54336000908152600c60205260409081902054905160e060020a63095ea7b3028152600160a060020a039283169263095ea7b392620006f1929116908690600401620010d5565b6020604051808303816000875af115801562000711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007379190620010ee565b50336000908152600c60205260409081902054905160e060020a63b6b55f2502815260048101849052600160a060020a039091169063b6b55f2590602401600060405180830381600087803b1580156200079057600080fd5b505af1158015620007a5573d6000803e3d6000fd5b50505050620007b46001600055565b5050565b620007c5823383620009d9565b620007b4828262000c1e565b60606005805462000370906200106f565b60003381620007f2828662000879565b9050838110156200085a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015260d860020a64207a65726f026064820152608401620004e5565b620004328286868403620008a4565b6000336200040981858562000a5d565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600160a060020a0383166200090e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f20616464604482015260e060020a6372657373026064820152608401620004e5565b600160a060020a038216620009775760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015260f060020a617373026064820152608401620004e5565b600160a060020a0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000620009e7848462000879565b9050600019811462000a57578181101562000a485760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401620004e5565b62000a578484848403620008a4565b50505050565b600160a060020a03831662000ac95760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015260d860020a646472657373026064820152608401620004e5565b600160a060020a03821662000b335760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f2061646472604482015260e860020a62657373026064820152608401620004e5565b62000b4083838362000e7b565b600160a060020a0383166000908152600160205260409020548181101562000bc05760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015260d060020a65616c616e6365026064820152608401620004e5565b600160a060020a03808516600081815260016020526040808220868603905592861680825290839020805486019055915160008051602062001dc68339815191529062000c109086815260200190565b60405180910390a362000a57565b600160a060020a03821662000c865760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f20616464726573604482015260f860020a6073026064820152608401620004e5565b62000c948260008362000e7b565b600160a060020a0382166000908152600160205260409020548181101562000d105760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015260f060020a616365026064820152608401620004e5565b600160a060020a038316600081815260016020908152604080832086860390556003805487900390555185815291929160008051602062001dc68339815191529101620009cc565b60026000540362000daf5760405160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401620004e5565b6002600055565b600160a060020a03821662000e115760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620004e5565b62000e1f6000838362000e7b565b806003600082825462000e339190620010af565b9091555050600160a060020a03821660008181526001602090815260408083208054860190555184815260008051602062001dc6833981519152910160405180910390a35050565b600160a060020a038316158062000e995750600160a060020a038216155b1562000ea457505050565b60405160e560020a62461bcd02815260206004820152603360248201527f4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e6044820152606960020a7239b332b9399030b932903234b9b0b13632b217026064820152608401620004e5565b610cb3806200111383390190565b600060208083528351808285015260005b8181101562000f4c5785810183015185820160400152820162000f2e565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a038116811462000f8557600080fd5b919050565b6000806040838503121562000f9e57600080fd5b62000fa98362000f6d565b946020939093013593505050565b60008060006060848603121562000fcd57600080fd5b62000fd88462000f6d565b925062000fe86020850162000f6d565b9150604084013590509250925092565b6000602082840312156200100b57600080fd5b5035919050565b6000602082840312156200102557600080fd5b620010308262000f6d565b9392505050565b600080604083850312156200104b57600080fd5b620010568362000f6d565b9150620010666020840162000f6d565b90509250929050565b6002810460018216806200108457607f821691505b602082108103620010a95760e060020a634e487b710260009081526022600452602490fd5b50919050565b808201808211156200040f5760e060020a634e487b710260009081526011600452602490fd5b600160a060020a03929092168252602082015260400190565b6000602082840312156200110157600080fd5b815180151581146200103057600080fdfe608060405234801561001057600080fd5b50604051610cb3380380610cb383398101604081905261002f916100cc565b60028054600160a060020a0319908116600160a060020a03998a1617909155600380548216978916979097179096556004805487169588169590951790945560058054861693871693909317909255600680548516918616919091179055600780548416918516919091179055600880549092169216919091179055610152565b8051600160a060020a03811681146100c757600080fd5b919050565b600080600080600080600060e0888a0312156100e757600080fd5b6100f0886100b0565b96506100fe602089016100b0565b955061010c604089016100b0565b945061011a606089016100b0565b9350610128608089016100b0565b925061013660a089016100b0565b915061014460c089016100b0565b905092959891949750929550565b610b52806101616000396000f3fe608060405234801561001057600080fd5b50600436106100a75760e060020a60003504630197d97281146100ac57806311eac855146100ca5780632e1a7d4d146100ea57806344c63eec146100ff5780634b57b0be146101225780634bbc52f51461013557806372d05a5214610148578063a639a3001461015b578063a98ad46c1461016e578063b6b55f2514610181578063da61ead414610194578063ff04c5ee146101a7575b600080fd5b6100b76303b5380081565b6040519081526020015b60405180910390f35b6006546100dd90600160a060020a031681565b6040516100c191906109a9565b6100fd6100f83660046109bd565b6101ba565b005b60005460015461010d919082565b604080519283526020830191909152016100c1565b6008546100dd90600160a060020a031681565b6100fd6101433660046109e7565b6103fb565b6004546100dd90600160a060020a031681565b6005546100dd90600160a060020a031681565b6007546100dd90600160a060020a031681565b6100fd61018f3660046109bd565b610782565b6002546100dd90600160a060020a031681565b6003546100dd90600160a060020a031681565b600254600160a060020a031633146101f05760405160e560020a62461bcd0281526004016101e790610a43565b60405180910390fd5b60005481111561023d5760405160e560020a62461bcd0281526020600482015260126024820152607160020a712737ba1032b737bab3b4103a37b5b2b739970260448201526064016101e7565b60015461024f906303b5380090610a85565b42101561029f5760405160e560020a62461bcd0281526020600482015260186024820152604160020a772a37b5b2b7399030b9329039ba34b636103637b1b5b2b2170260448201526064016101e7565b806000800160008282546102b39190610a9e565b90915550506004805460405160e460020a63079cc679028152600160a060020a03909116916379cc6790916102ec913391869101610ab1565b600060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b505060035460405160e060020a635d3eea9102815260048101859052600160a060020a039091169250635d3eea919150602401600060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505060055460405160e060020a63a9059cbb028152600160a060020a03909116925063a9059cbb91506103b49033908590600401610ab1565b6020604051808303816000875af11580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190610aca565b5050565b600254600160a060020a031633146104285760405160e560020a62461bcd0281526004016101e790610a43565b60035460405160e060020a63e12f3a6102815260009182918291600160a060020a03169063e12f3a61906104609030906004016109a9565b606060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610aee565b60035460405160e360020a631ac37e7f0281528b151560048201528a15156024820152891515604482015288151560648201529396509194509250600160a060020a03169063d61bf3f890608401600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b5050505086801561052d57508215155b156105ac5760065460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906105679033908790600401610ab1565b6020604051808303816000875af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610aca565b505b8580156105b857508115155b156106375760075460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906105f29033908690600401610ab1565b6020604051808303816000875af1158015610611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106359190610aca565b505b848015610642575083155b801561064d57508015155b156106cc5760085460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906106879033908590600401610ab1565b6020604051808303816000875af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610aca565b505b8480156106d65750835b80156106e157508015155b1561077957604051600090339083908381818185875af1925050503d8060008114610728576040519150601f19603f3d011682016040523d82523d6000602084013e61072d565b606091505b50509050806107775760405160e560020a62461bcd0281526020600482015260106024820152608160020a6f2a3930b739b332b9103330b4b632b2170260448201526064016101e7565b505b50505050505050565b600454600160a060020a031633146107d85760405160e560020a62461bcd0281526020600482015260136024820152606960020a7227b7363c903b21a9ac1031b7b73a3930b1ba170260448201526064016101e7565b60055460405160e060020a6323b872dd02815233600482015230602482015260448101839052600160a060020a03909116906323b872dd906064016020604051808303816000875af1158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610aca565b61089a5760405160e560020a62461bcd02815260206004820152600f6024820152608960020a6e3232b837b9b4ba103330b4b632b2170260448201526064016101e7565b60055460035460405160e060020a63095ea7b3028152600160a060020a039283169263095ea7b3926108d3929116908590600401610ab1565b6020604051808303816000875af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190610aca565b5060035460405160e160020a63534a7e1d02815260048101839052600160a060020a039091169063a694fc3a90602401600060405180830381600087803b15801561096057600080fd5b505af1158015610974573d6000803e3d6000fd5b5050505060405180604001604052808260008001546109939190610a85565b8152426020918201528151600055015160015550565b600160a060020a0391909116815260200190565b6000602082840312156109cf57600080fd5b5035919050565b80151581146109e457600080fd5b50565b600080600080608085870312156109fd57600080fd5b8435610a08816109d6565b93506020850135610a18816109d6565b92506040850135610a28816109d6565b91506060850135610a38816109d6565b939692955090935050565b6020808252600b9082015260a960020a6a27b7363c9037bbb732b91702604082015260600190565b60e060020a634e487b710260009081526011600452602490fd5b80820180821115610a9857610a98610a6b565b92915050565b81810381811115610a9857610a98610a6b565b600160a060020a03929092168252602082015260400190565b600060208284031215610adc57600080fd5b8151610ae7816109d6565b9392505050565b600080600060608486031215610b0357600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220521230085bbf0474d1e2f3b5dacc3e85991df9602e63e9fa68b9c25749628dcd64736f6c63430008130033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a9d065ab3b9f40de7ce67f83deb71102acacb30a8c28e876ac88f2fb919eb4ee64736f6c63430008130033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200012d5760e060020a600035046306fdde03811462000132578063095ea7b3146200015457806318160ddd146200017c57806323b872dd146200018f578063313ce56714620001a657806332cb6b0c14620001b65780633950935114620001c957806342966c6814620001e057806359d6613e14620001f95780636a760b80146200022657806370a08231146200023d57806379cc6790146200026957806389a30271146200028057806394469837146200029457806395d89b4114620002a85780639bc181d214620002b2578063a457c2d714620002de578063a9059cbb14620002f5578063ad5c4648146200030c578063c1456ab01462000320578063c54e44eb1462000334578063dd62ed3e1462000348575b600080fd5b6200013c6200035f565b6040516200014b919062000f1d565b60405180910390f35b6200016b6200016536600462000f8a565b620003f9565b60405190151581526020016200014b565b6003545b6040519081526020016200014b565b6200016b620001a036600462000fb7565b62000415565b604051601281526020016200014b565b620001806a52b7d2dcc80cd2e400000081565b6200016b620001da36600462000f8a565b6200043d565b620001f7620001f136600462000ff8565b62000465565b005b6007546200020d90600160a060020a031681565b604051600160a060020a0390911681526020016200014b565b620001f76200023736600462000ff8565b62000474565b620001806200024e36600462001012565b600160a060020a031660009081526001602052604090205490565b620001f76200027a36600462000f8a565b620007b8565b6009546200020d90600160a060020a031681565b600a546200020d90600160a060020a031681565b6200013c620007d1565b6200020d620002c336600462001012565b600c60205260009081526040902054600160a060020a031681565b6200016b620002ef36600462000f8a565b620007e2565b6200016b6200030636600462000f8a565b62000869565b6008546200020d90600160a060020a031681565b6006546200020d90600160a060020a031681565b600b546200020d90600160a060020a031681565b620001806200035936600462001037565b62000879565b60606004805462000370906200106f565b80601f01602080910402602001604051908101604052809291908181526020018280546200039e906200106f565b8015620003ef5780601f10620003c357610100808354040283529160200191620003ef565b820191906000526020600020905b815481529060010190602001808311620003d157829003601f168201915b5050505050905090565b60003362000409818585620008a4565b60019150505b92915050565b60003362000425858285620009d9565b6200043285858562000a5d565b506001949350505050565b6000336200040981858562000453838362000879565b6200045f9190620010af565b620008a4565b62000471338262000c1e565b50565b806a52b7d2dcc80cd2e40000006200048b60035490565b620004979083620010af565b1115620004ee5760405160e560020a62461bcd02815260206004820152601b60248201527f616d6f756e7420737572706173736573206d617820737570706c79000000000060448201526064015b60405180910390fd5b620004f862000d58565b600082116200054d5760405160e560020a62461bcd02815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401620004e5565b60065460405160e460020a63079cc679028152600160a060020a03909116906379cc679090620005849033908690600401620010d5565b600060405180830381600087803b1580156200059f57600080fd5b505af1158015620005b4573d6000803e3d6000fd5b50505050620005c4338362000db6565b336000908152600c6020526040902054600160a060020a0316620006a857600754600a54600954600b546008546040513395600160a060020a039081169530959082169490821693908216929116906200061e9062000f0f565b600160a060020a03978816815295871660208701529386166040860152918516606085015284166080840152831660a083015290911660c082015260e001604051809103906000f08015801562000679573d6000803e3d6000fd5b50336000908152600c602052604090208054600160a060020a031916600160a060020a03929092169190911790555b600a54336000908152600c60205260409081902054905160e060020a63095ea7b3028152600160a060020a039283169263095ea7b392620006f1929116908690600401620010d5565b6020604051808303816000875af115801562000711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007379190620010ee565b50336000908152600c60205260409081902054905160e060020a63b6b55f2502815260048101849052600160a060020a039091169063b6b55f2590602401600060405180830381600087803b1580156200079057600080fd5b505af1158015620007a5573d6000803e3d6000fd5b50505050620007b46001600055565b5050565b620007c5823383620009d9565b620007b4828262000c1e565b60606005805462000370906200106f565b60003381620007f2828662000879565b9050838110156200085a5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015260d860020a64207a65726f026064820152608401620004e5565b620004328286868403620008a4565b6000336200040981858562000a5d565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600160a060020a0383166200090e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f20616464604482015260e060020a6372657373026064820152608401620004e5565b600160a060020a038216620009775760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015260f060020a617373026064820152608401620004e5565b600160a060020a0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000620009e7848462000879565b9050600019811462000a57578181101562000a485760405160e560020a62461bcd02815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401620004e5565b62000a578484848403620008a4565b50505050565b600160a060020a03831662000ac95760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015260d860020a646472657373026064820152608401620004e5565b600160a060020a03821662000b335760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f2061646472604482015260e860020a62657373026064820152608401620004e5565b62000b4083838362000e7b565b600160a060020a0383166000908152600160205260409020548181101562000bc05760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015260d060020a65616c616e6365026064820152608401620004e5565b600160a060020a03808516600081815260016020526040808220868603905592861680825290839020805486019055915160008051602062001dc68339815191529062000c109086815260200190565b60405180910390a362000a57565b600160a060020a03821662000c865760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f20616464726573604482015260f860020a6073026064820152608401620004e5565b62000c948260008362000e7b565b600160a060020a0382166000908152600160205260409020548181101562000d105760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015260f060020a616365026064820152608401620004e5565b600160a060020a038316600081815260016020908152604080832086860390556003805487900390555185815291929160008051602062001dc68339815191529101620009cc565b60026000540362000daf5760405160e560020a62461bcd02815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401620004e5565b6002600055565b600160a060020a03821662000e115760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620004e5565b62000e1f6000838362000e7b565b806003600082825462000e339190620010af565b9091555050600160a060020a03821660008181526001602090815260408083208054860190555184815260008051602062001dc6833981519152910160405180910390a35050565b600160a060020a038316158062000e995750600160a060020a038216155b1562000ea457505050565b60405160e560020a62461bcd02815260206004820152603360248201527f4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e6044820152606960020a7239b332b9399030b932903234b9b0b13632b217026064820152608401620004e5565b610cb3806200111383390190565b600060208083528351808285015260005b8181101562000f4c5785810183015185820160400152820162000f2e565b506000604082860101526040601f19601f8301168501019250505092915050565b8035600160a060020a038116811462000f8557600080fd5b919050565b6000806040838503121562000f9e57600080fd5b62000fa98362000f6d565b946020939093013593505050565b60008060006060848603121562000fcd57600080fd5b62000fd88462000f6d565b925062000fe86020850162000f6d565b9150604084013590509250925092565b6000602082840312156200100b57600080fd5b5035919050565b6000602082840312156200102557600080fd5b620010308262000f6d565b9392505050565b600080604083850312156200104b57600080fd5b620010568362000f6d565b9150620010666020840162000f6d565b90509250929050565b6002810460018216806200108457607f821691505b602082108103620010a95760e060020a634e487b710260009081526022600452602490fd5b50919050565b808201808211156200040f5760e060020a634e487b710260009081526011600452602490fd5b600160a060020a03929092168252602082015260400190565b6000602082840312156200110157600080fd5b815180151581146200103057600080fdfe608060405234801561001057600080fd5b50604051610cb3380380610cb383398101604081905261002f916100cc565b60028054600160a060020a0319908116600160a060020a03998a1617909155600380548216978916979097179096556004805487169588169590951790945560058054861693871693909317909255600680548516918616919091179055600780548416918516919091179055600880549092169216919091179055610152565b8051600160a060020a03811681146100c757600080fd5b919050565b600080600080600080600060e0888a0312156100e757600080fd5b6100f0886100b0565b96506100fe602089016100b0565b955061010c604089016100b0565b945061011a606089016100b0565b9350610128608089016100b0565b925061013660a089016100b0565b915061014460c089016100b0565b905092959891949750929550565b610b52806101616000396000f3fe608060405234801561001057600080fd5b50600436106100a75760e060020a60003504630197d97281146100ac57806311eac855146100ca5780632e1a7d4d146100ea57806344c63eec146100ff5780634b57b0be146101225780634bbc52f51461013557806372d05a5214610148578063a639a3001461015b578063a98ad46c1461016e578063b6b55f2514610181578063da61ead414610194578063ff04c5ee146101a7575b600080fd5b6100b76303b5380081565b6040519081526020015b60405180910390f35b6006546100dd90600160a060020a031681565b6040516100c191906109a9565b6100fd6100f83660046109bd565b6101ba565b005b60005460015461010d919082565b604080519283526020830191909152016100c1565b6008546100dd90600160a060020a031681565b6100fd6101433660046109e7565b6103fb565b6004546100dd90600160a060020a031681565b6005546100dd90600160a060020a031681565b6007546100dd90600160a060020a031681565b6100fd61018f3660046109bd565b610782565b6002546100dd90600160a060020a031681565b6003546100dd90600160a060020a031681565b600254600160a060020a031633146101f05760405160e560020a62461bcd0281526004016101e790610a43565b60405180910390fd5b60005481111561023d5760405160e560020a62461bcd0281526020600482015260126024820152607160020a712737ba1032b737bab3b4103a37b5b2b739970260448201526064016101e7565b60015461024f906303b5380090610a85565b42101561029f5760405160e560020a62461bcd0281526020600482015260186024820152604160020a772a37b5b2b7399030b9329039ba34b636103637b1b5b2b2170260448201526064016101e7565b806000800160008282546102b39190610a9e565b90915550506004805460405160e460020a63079cc679028152600160a060020a03909116916379cc6790916102ec913391869101610ab1565b600060405180830381600087803b15801561030657600080fd5b505af115801561031a573d6000803e3d6000fd5b505060035460405160e060020a635d3eea9102815260048101859052600160a060020a039091169250635d3eea919150602401600060405180830381600087803b15801561036757600080fd5b505af115801561037b573d6000803e3d6000fd5b505060055460405160e060020a63a9059cbb028152600160a060020a03909116925063a9059cbb91506103b49033908590600401610ab1565b6020604051808303816000875af11580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190610aca565b5050565b600254600160a060020a031633146104285760405160e560020a62461bcd0281526004016101e790610a43565b60035460405160e060020a63e12f3a6102815260009182918291600160a060020a03169063e12f3a61906104609030906004016109a9565b606060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610aee565b60035460405160e360020a631ac37e7f0281528b151560048201528a15156024820152891515604482015288151560648201529396509194509250600160a060020a03169063d61bf3f890608401600060405180830381600087803b15801561050957600080fd5b505af115801561051d573d6000803e3d6000fd5b5050505086801561052d57508215155b156105ac5760065460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906105679033908790600401610ab1565b6020604051808303816000875af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610aca565b505b8580156105b857508115155b156106375760075460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906105f29033908690600401610ab1565b6020604051808303816000875af1158015610611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106359190610aca565b505b848015610642575083155b801561064d57508015155b156106cc5760085460405160e060020a63a9059cbb028152600160a060020a039091169063a9059cbb906106879033908590600401610ab1565b6020604051808303816000875af11580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610aca565b505b8480156106d65750835b80156106e157508015155b1561077957604051600090339083908381818185875af1925050503d8060008114610728576040519150601f19603f3d011682016040523d82523d6000602084013e61072d565b606091505b50509050806107775760405160e560020a62461bcd0281526020600482015260106024820152608160020a6f2a3930b739b332b9103330b4b632b2170260448201526064016101e7565b505b50505050505050565b600454600160a060020a031633146107d85760405160e560020a62461bcd0281526020600482015260136024820152606960020a7227b7363c903b21a9ac1031b7b73a3930b1ba170260448201526064016101e7565b60055460405160e060020a6323b872dd02815233600482015230602482015260448101839052600160a060020a03909116906323b872dd906064016020604051808303816000875af1158015610832573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108569190610aca565b61089a5760405160e560020a62461bcd02815260206004820152600f6024820152608960020a6e3232b837b9b4ba103330b4b632b2170260448201526064016101e7565b60055460035460405160e060020a63095ea7b3028152600160a060020a039283169263095ea7b3926108d3929116908590600401610ab1565b6020604051808303816000875af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190610aca565b5060035460405160e160020a63534a7e1d02815260048101839052600160a060020a039091169063a694fc3a90602401600060405180830381600087803b15801561096057600080fd5b505af1158015610974573d6000803e3d6000fd5b5050505060405180604001604052808260008001546109939190610a85565b8152426020918201528151600055015160015550565b600160a060020a0391909116815260200190565b6000602082840312156109cf57600080fd5b5035919050565b80151581146109e457600080fd5b50565b600080600080608085870312156109fd57600080fd5b8435610a08816109d6565b93506020850135610a18816109d6565b92506040850135610a28816109d6565b91506060850135610a38816109d6565b939692955090935050565b6020808252600b9082015260a960020a6a27b7363c9037bbb732b91702604082015260600190565b60e060020a634e487b710260009081526011600452602490fd5b80820180821115610a9857610a98610a6b565b92915050565b81810381811115610a9857610a98610a6b565b600160a060020a03929092168252602082015260400190565b600060208284031215610adc57600080fd5b8151610ae7816109d6565b9392505050565b600080600060608486031215610b0357600080fd5b835192506020840151915060408401519050925092509256fea2646970667358221220521230085bbf0474d1e2f3b5dacc3e85991df9602e63e9fa68b9c25749628dcd64736f6c63430008130033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a9d065ab3b9f40de7ce67f83deb71102acacb30a8c28e876ac88f2fb919eb4ee64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3690:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:1:32",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:3:32",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:32"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:32",
                "type": ""
              }
            ],
            "src": "14:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "362:470:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "383:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "392:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "379:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "379:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "404:3:32",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "375:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:33:32"
                  },
                  "nodeType": "YulIf",
                  "src": "372:53:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "434:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "474:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "444:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:40:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "493:59:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "537:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "548:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "533:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "533:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "503:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "503:49:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:59:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "605:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "616:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "601:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "601:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "571:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:49:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "629:59:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "673:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "684:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "669:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "669:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "639:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:49:32"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "629:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "697:60:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "741:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "752:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "737:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "737:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "707:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "766:60:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "821:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "806:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "806:19:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "776:29:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:50:32"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "288:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "299:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "311:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "319:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "327:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "335:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "343:6:32",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "351:6:32",
                "type": ""
              }
            ],
            "src": "196:636:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "869:152:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "889:77:32",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "879:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "879:88:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "983:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:4:32",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "976:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "976:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "976:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1007:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1010:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:15:32"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "837:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1081:382:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1091:22:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1105:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1111:1:32",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1101:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1101:12:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1091:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1122:38:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1152:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1158:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:12:32"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1126:18:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1199:31:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1201:27:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1215:6:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1223:4:32",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1211:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1211:17:32"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1201:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1179:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:26:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1169:61:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1289:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1310:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1303:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1303:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1411:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1414:4:32",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1404:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1404:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1404:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1442:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1432:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1432:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1432:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1245:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1265:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1265:14:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1242:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:38:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1239:218:32"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1061:4:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1070:6:32",
                "type": ""
              }
            ],
            "src": "1026:437:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1524:65:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1541:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1544:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1534:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:14:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1534:14:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:26:32",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1578:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "1565:9:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1557:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1507:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1515:4:32",
                "type": ""
              }
            ],
            "src": "1468:121:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1675:470:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1708:431:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1722:11:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1732:1:32",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "1726:2:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1753:2:32"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "1757:5:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1746:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1746:17:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1746:17:32"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1776:31:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1798:2:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1802:4:32",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "1788:9:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1788:19:32"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1780:4:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1820:60:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "1843:4:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "1857:10:32"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1869:2:32",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1853:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1853:19:32"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1874:4:32",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1849:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1849:30:32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1839:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1839:41:32"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "1824:11:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1917:23:32",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1919:19:32",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1934:4:32"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1919:11:32"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "1899:10:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1911:4:32",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1896:2:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1896:20:32"
                        },
                        "nodeType": "YulIf",
                        "src": "1893:47:32"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1953:44:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "1967:4:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "1981:3:32"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1986:2:32",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1977:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1977:12:32"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1991:4:32",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1973:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1973:23:32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1963:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1963:34:32"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "1957:2:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2010:24:32",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "2023:11:32"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "2014:5:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2108:21:32",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2117:5:32"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2124:2:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2110:6:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2110:17:32"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2110:17:32"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "2058:5:32"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "2065:2:32"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "2055:2:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2055:13:32"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "2069:26:32",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2071:22:32",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "2084:5:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2091:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2080:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2080:13:32"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "2071:5:32"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "2051:3:32",
                          "statements": []
                        },
                        "src": "2047:82:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "1691:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1696:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1688:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1688:11:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1685:454:32"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1647:5:32",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "1654:3:32",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "1659:10:32",
                "type": ""
              }
            ],
            "src": "1594:551:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2235:89:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2245:73:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "2260:4:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2278:1:32",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2274:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2274:6:32"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2286:1:32",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2293:1:32",
                                            "type": "",
                                            "value": "8"
                                          },
                                          {
                                            "name": "len",
                                            "nodeType": "YulIdentifier",
                                            "src": "2296:3:32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "2289:3:32"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2289:11:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "2282:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2282:19:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2270:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2270:32:32"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2266:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2266:37:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2256:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2256:48:32"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2310:1:32",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "2313:3:32"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "2306:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:11:32"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2253:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:65:32"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "2245:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2212:4:32",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "2218:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "2226:4:32",
                "type": ""
              }
            ],
            "src": "2150:174:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2425:1263:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2435:24:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2455:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2449:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2449:10:32"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "2439:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2502:22:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2504:16:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2504:18:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2504:18:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2474:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:18:32",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2471:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2471:30:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2468:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "2577:4:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "2615:4:32"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "2609:5:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2609:11:32"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "2583:25:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2583:38:32"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2623:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "2533:43:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2533:97:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2533:97:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2639:18:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2656:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "2643:9:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2666:23:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2685:4:32",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "2670:11:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2698:24:32",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "2711:11:32"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "2698:9:32"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2768:663:32",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2782:35:32",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "2801:6:32"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2813:2:32",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "2809:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2809:7:32"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2797:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2797:20:32"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "2786:7:32",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2830:49:32",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:4:32"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "2844:29:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2844:35:32"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "2834:6:32",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2892:10:32",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2901:1:32",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "2896:1:32",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2979:172:32",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3004:6:32"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "3022:3:32"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "3027:9:32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3018:3:32"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3018:19:32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3012:5:32"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3012:26:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2997:6:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2997:42:32"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2997:42:32"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3056:24:32",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3070:6:32"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3078:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3066:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3066:14:32"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3056:6:32"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3097:40:32",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3114:9:32"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3125:11:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3110:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3110:27:32"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3097:9:32"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2926:1:32"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2929:7:32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2923:2:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2923:14:32"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "2938:28:32",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2940:24:32",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2949:1:32"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2952:11:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2945:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2945:19:32"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2940:1:32"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "2919:3:32",
                              "statements": []
                            },
                            "src": "2915:236:32"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3199:173:32",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3217:43:32",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "3244:3:32"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3249:9:32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3240:3:32"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3240:19:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3234:5:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3234:26:32"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "3221:9:32",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3284:6:32"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "3296:9:32"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "3319:1:32",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3315:3:32"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3315:6:32"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "3327:1:32",
                                                        "type": "",
                                                        "value": "2"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "3334:1:32",
                                                            "type": "",
                                                            "value": "8"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "name": "newLen",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3341:6:32"
                                                              },
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "3349:2:32",
                                                                "type": "",
                                                                "value": "31"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "and",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3337:3:32"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3337:15:32"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mul",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3330:3:32"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3330:23:32"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "exp",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3323:3:32"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3323:31:32"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "div",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3311:3:32"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3311:44:32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "3307:3:32"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3307:49:32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3292:3:32"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3292:65:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "3277:6:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3277:81:32"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3277:81:32"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3170:7:32"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "3179:6:32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3167:2:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3167:19:32"
                            },
                            "nodeType": "YulIf",
                            "src": "3164:208:32"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3392:4:32"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "3406:6:32"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3414:1:32",
                                          "type": "",
                                          "value": "2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "3402:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3402:14:32"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3418:1:32",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3398:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3398:22:32"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "3385:6:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3385:36:32"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3385:36:32"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "2761:670:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2766:1:32",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3448:234:32",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3462:14:32",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3475:1:32",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "3466:5:32",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3511:67:32",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3529:35:32",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "3548:3:32"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3553:9:32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3544:3:32"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3544:19:32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3538:5:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3538:26:32"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "3529:5:32"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "3492:6:32"
                            },
                            "nodeType": "YulIf",
                            "src": "3489:89:32"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "3598:4:32"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "3657:5:32"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:6:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "3604:52:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3604:67:32"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "3591:6:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3591:81:32"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3591:81:32"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "3440:242:32",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "2741:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2738:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:14:32"
                  },
                  "nodeType": "YulSwitch",
                  "src": "2731:951:32"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "2410:4:32",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2416:3:32",
                "type": ""
              }
            ],
            "src": "2329:1359:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, div(add(startIndex, 31), 0x20))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, div(add(len, 31), 0x20))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(div(not(0), exp(2, mul(8, len))))), mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(div(not(0), exp(2, mul(8, and(newLen, 31)))))))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11030:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:32",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:32"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:32"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:32",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:32"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:32"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:32"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:32"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:32",
                    "statements": []
                  },
                  "src": "294:140:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:32"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:32",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:32",
                "type": ""
              }
            ],
            "src": "14:548:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "616:124:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "626:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "648:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "635:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "626:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "718:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "727:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "730:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "720:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "720:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "720:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "677:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "688:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "703:1:32",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "706:3:32",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "699:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "699:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "712:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "695:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "695:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "684:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "684:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "674:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "667:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "664:70:32"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "595:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:32",
                "type": ""
              }
            ],
            "src": "567:173:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "832:167:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "878:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "887:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "890:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "880:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "880:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "880:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "862:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "849:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "849:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "874:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "845:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "842:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "903:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "932:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "913:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "903:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "951:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "989:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "961:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "790:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "801:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "813:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "821:6:32",
                "type": ""
              }
            ],
            "src": "745:254:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1099:92:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1109:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1121:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1132:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1117:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1109:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1151:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1176:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1169:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1169:14:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1162:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1144:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:41:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1144:41:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1090:4:32",
                "type": ""
              }
            ],
            "src": "1004:187:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:76:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1307:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1319:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1330:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1315:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1307:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1349:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1360:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1342:25:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1266:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1277:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1288:4:32",
                "type": ""
              }
            ],
            "src": "1196:177:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1482:224:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1528:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1537:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1540:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1503:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1512:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1499:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1524:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1495:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1495:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1492:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1582:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1563:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1553:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1634:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1611:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1601:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1658:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1685:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1696:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1681:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1668:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1432:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1443:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1455:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1463:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1471:6:32",
                "type": ""
              }
            ],
            "src": "1378:328:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1808:87:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1818:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1830:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1841:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1826:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1818:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1860:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1875:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:4:32",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1871:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1871:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1853:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:36:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1853:36:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1777:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1788:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1799:4:32",
                "type": ""
              }
            ],
            "src": "1711:184:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1970:110:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1991:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2000:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2012:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1983:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "1980:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2041:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2064:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2051:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1936:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1947:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1959:6:32",
                "type": ""
              }
            ],
            "src": "1900:180:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2205:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2215:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2227:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2238:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2223:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2223:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2215:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2257:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2272:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2288:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2291:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "2284:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2284:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2297:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2268:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2268:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2250:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2250:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2250:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IStakedCSX_$1024__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2174:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2185:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2196:4:32",
                "type": ""
              }
            ],
            "src": "2085:222:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2382:116:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2428:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2437:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2430:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2430:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2430:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2403:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2412:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2399:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2399:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2395:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2395:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2392:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2453:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2482:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2463:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2453:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2348:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2359:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2371:6:32",
                "type": ""
              }
            ],
            "src": "2312:186:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2618:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2628:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2640:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2636:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2628:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2670:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2685:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2701:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2704:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "2697:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2697:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2710:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2693:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2693:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2681:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2681:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2663:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2663:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2663:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$721__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2587:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2598:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2609:4:32",
                "type": ""
              }
            ],
            "src": "2503:217:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2859:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2869:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2881:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2892:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2877:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2877:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2869:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2911:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2926:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2942:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2945:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "2938:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2938:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2951:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2934:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2934:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2904:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2904:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2904:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_VestedCSXStakingContract_$2212__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2828:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2839:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2850:4:32",
                "type": ""
              }
            ],
            "src": "2725:236:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3080:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3090:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3102:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3113:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3098:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3090:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3132:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3147:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3163:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3166:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "3159:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3159:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3172:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3155:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3155:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3143:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3143:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3125:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3125:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3125:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IWETH_$991__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3049:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3060:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3071:4:32",
                "type": ""
              }
            ],
            "src": "2966:216:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3311:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3321:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3333:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3344:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3329:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3329:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3321:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3363:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3378:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3394:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3397:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "3390:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3390:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3403:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3386:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3386:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3374:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3374:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3356:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3356:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Burnable_$1041__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3280:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3291:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3302:4:32",
                "type": ""
              }
            ],
            "src": "3187:226:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3505:173:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3551:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3560:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3563:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3553:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3553:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3553:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3526:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3535:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3522:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3522:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3547:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3518:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3518:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3515:52:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3576:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3605:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3586:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3576:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:48:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3657:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3668:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3653:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3653:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3634:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3634:38:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3624:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3463:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3474:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3486:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3494:6:32",
                "type": ""
              }
            ],
            "src": "3418:260:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3738:333:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3748:22:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3762:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3768:1:32",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:12:32"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3748:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3779:38:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3809:4:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3815:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3805:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3805:12:32"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3783:18:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3856:31:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3858:27:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3872:6:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3880:4:32",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3868:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3868:17:32"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3858:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3836:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3829:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:26:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3826:61:32"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3946:119:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3967:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3974:10:32",
                                  "type": "",
                                  "value": "0x4e487b71"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3990:1:32",
                                      "type": "",
                                      "value": "2"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3993:3:32",
                                      "type": "",
                                      "value": "224"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "exp",
                                    "nodeType": "YulIdentifier",
                                    "src": "3986:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3986:11:32"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nodeType": "YulIdentifier",
                                "src": "3970:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3970:28:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3960:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3960:39:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3960:39:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4019:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4022:4:32",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4012:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4012:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4012:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4047:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4050:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4040:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4040:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4040:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3902:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3925:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3933:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3922:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3922:14:32"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3899:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3899:38:32"
                  },
                  "nodeType": "YulIf",
                  "src": "3896:169:32"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3718:4:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3727:6:32",
                "type": ""
              }
            ],
            "src": "3683:388:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4124:182:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4134:16:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4145:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4148:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4141:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4134:3:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4181:119:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4202:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4209:10:32",
                                  "type": "",
                                  "value": "0x4e487b71"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4225:1:32",
                                      "type": "",
                                      "value": "2"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4228:3:32",
                                      "type": "",
                                      "value": "224"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "exp",
                                    "nodeType": "YulIdentifier",
                                    "src": "4221:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4221:11:32"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nodeType": "YulIdentifier",
                                "src": "4205:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4205:28:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4195:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4195:39:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4195:39:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4254:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4257:4:32",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4247:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4247:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4247:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4282:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4285:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4275:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4275:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4275:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4165:1:32"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "4168:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4162:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4162:10:32"
                  },
                  "nodeType": "YulIf",
                  "src": "4159:141:32"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4107:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4110:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4116:3:32",
                "type": ""
              }
            ],
            "src": "4076:230:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4485:177:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4502:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4495:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4495:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4536:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4547:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4532:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4532:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4552:2:32",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4525:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4525:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4525:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4575:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4586:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4571:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4571:18:32"
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4591:29:32",
                        "type": "",
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4564:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4564:57:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4564:57:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4630:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4642:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4653:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4638:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4638:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4630:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4462:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4476:4:32",
                "type": ""
              }
            ],
            "src": "4311:351:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4841:179:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4858:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4869:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4851:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4851:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4892:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4903:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4888:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4888:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4908:2:32",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4881:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4881:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4881:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4931:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4942:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4927:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4927:18:32"
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4947:31:32",
                        "type": "",
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4920:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4920:59:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4920:59:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4988:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5000:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5011:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4996:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4996:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4988:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4818:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4832:4:32",
                "type": ""
              }
            ],
            "src": "4667:353:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5154:145:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5164:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5176:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5187:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5172:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5172:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5164:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5206:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5221:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5237:1:32",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5240:3:32",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "exp",
                                  "nodeType": "YulIdentifier",
                                  "src": "5233:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5233:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5246:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5229:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5229:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5217:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5217:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5199:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5199:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5199:51:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5270:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5281:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5266:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5266:18:32"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5286:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5259:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5259:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5259:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5115:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5126:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5134:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5145:4:32",
                "type": ""
              }
            ],
            "src": "5025:274:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5573:439:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5583:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5595:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5606:3:32",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5591:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5583:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5619:29:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5637:1:32",
                            "type": "",
                            "value": "2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5640:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "exp",
                          "nodeType": "YulIdentifier",
                          "src": "5633:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5633:11:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5646:1:32",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5629:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5629:19:32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5623:2:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5664:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5679:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5687:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5675:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5675:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5657:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5657:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5657:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5711:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5722:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5707:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5707:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5731:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5739:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5727:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5727:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5700:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5700:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5763:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5774:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5759:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5759:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5783:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5791:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5779:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5779:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5752:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5752:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5752:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5815:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5826:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5811:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5811:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5835:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5843:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5831:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5831:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5804:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5804:43:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5804:43:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5867:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5878:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5863:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5863:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "5888:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5896:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5884:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5884:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5920:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5931:3:32",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5916:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5916:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "5941:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5949:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5937:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5937:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5909:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5909:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5909:44:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5973:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5984:3:32",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5969:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5969:19:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "5994:6:32"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6002:2:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5990:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5990:15:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5962:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5962:44:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5962:44:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5494:9:32",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "5505:6:32",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "5513:6:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5521:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5529:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5537:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5545:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5553:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5564:4:32",
                "type": ""
              }
            ],
            "src": "5304:708:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6095:199:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6141:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6150:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6153:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6143:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6143:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6143:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6116:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6125:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6112:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6112:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6137:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6108:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6108:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6105:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6166:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6185:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6179:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6179:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6170:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6248:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6257:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6260:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6250:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6250:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6250:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6217:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6238:5:32"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6231:6:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6231:13:32"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6224:6:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6224:21:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6214:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6214:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6207:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6207:40:32"
                  },
                  "nodeType": "YulIf",
                  "src": "6204:60:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6273:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6283:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6273:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6061:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6072:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6084:6:32",
                "type": ""
              }
            ],
            "src": "6017:277:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6473:227:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6490:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6501:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6483:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6483:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6483:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6524:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6535:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6520:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6520:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6540:2:32",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6513:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6513:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6513:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6563:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6574:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6559:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6559:18:32"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6579:34:32",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6552:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6552:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6552:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6634:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6645:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6630:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6630:18:32"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6650:7:32",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6623:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6623:35:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6623:35:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6667:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6679:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6690:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6675:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6675:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6667:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6450:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6464:4:32",
                "type": ""
              }
            ],
            "src": "6299:401:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6879:226:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6896:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6907:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6889:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6889:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6889:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6930:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6941:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6926:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6926:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6946:2:32",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6919:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6919:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6919:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6969:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6980:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6965:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6965:18:32"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6985:34:32",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6958:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6958:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7040:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7051:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7036:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7036:18:32"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7056:6:32",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7029:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7029:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7029:34:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7072:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7084:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7095:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7080:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7072:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6856:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6870:4:32",
                "type": ""
              }
            ],
            "src": "6705:400:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7284:224:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7301:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7312:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7294:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7294:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7294:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7335:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7346:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7331:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7331:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7351:2:32",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7324:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7324:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7324:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7374:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7385:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7370:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7370:18:32"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7390:34:32",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7363:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7363:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7363:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7445:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7456:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7441:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7441:18:32"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7461:4:32",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7434:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7434:32:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7434:32:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7475:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7487:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7498:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7483:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7483:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7475:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7261:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7275:4:32",
                "type": ""
              }
            ],
            "src": "7110:398:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7687:179:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7704:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7715:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7697:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7697:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7697:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7738:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7749:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7734:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7734:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7754:2:32",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7727:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7727:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7727:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7777:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7788:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7773:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7773:18:32"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7793:31:32",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7766:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7766:59:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7766:59:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7834:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7846:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7857:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7842:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7842:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7834:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7664:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7678:4:32",
                "type": ""
              }
            ],
            "src": "7513:353:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8045:227:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8062:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8073:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8055:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8055:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8096:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8107:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8092:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8092:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8112:2:32",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8085:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8085:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8135:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8146:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8131:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8131:18:32"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8151:34:32",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8124:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8124:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8124:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8206:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8217:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8202:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8202:18:32"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8222:7:32",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8195:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8195:35:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8195:35:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8239:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8251:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8262:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8247:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8247:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8239:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8022:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8036:4:32",
                "type": ""
              }
            ],
            "src": "7871:401:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8451:225:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8468:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8479:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8461:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8461:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8461:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8502:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8513:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8498:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8498:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8518:2:32",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8491:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8491:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8491:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8541:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8552:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8537:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8537:18:32"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8557:34:32",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8530:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8530:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8530:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8612:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8623:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8608:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8608:18:32"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8628:5:32",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8601:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8601:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8601:33:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8643:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8655:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8666:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8651:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8643:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8428:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8442:4:32",
                "type": ""
              }
            ],
            "src": "8277:399:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8855:228:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8872:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8883:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8865:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8865:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8865:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8906:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8917:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8902:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8902:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8922:2:32",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8895:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8895:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8945:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8956:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8941:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8941:18:32"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8961:34:32",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8934:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8934:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8934:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9016:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9027:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9012:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9012:18:32"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9032:8:32",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9005:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9005:36:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9005:36:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9050:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9062:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9073:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9058:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9058:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9050:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8832:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8846:4:32",
                "type": ""
              }
            ],
            "src": "8681:402:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9262:223:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9279:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9290:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9272:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9272:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9272:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9313:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9324:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9309:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9309:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9329:2:32",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9302:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9302:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9302:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9352:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9363:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9348:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9348:18:32"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9368:34:32",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9341:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9341:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9341:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9423:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9434:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9419:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9419:18:32"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9439:3:32",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9412:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9412:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9412:31:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9452:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9464:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9475:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9460:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9460:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9452:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9239:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9253:4:32",
                "type": ""
              }
            ],
            "src": "9088:397:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9664:224:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9681:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9692:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9674:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9674:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9674:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9715:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9726:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9711:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9711:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9731:2:32",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9704:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9704:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9704:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9754:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9765:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9750:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9750:18:32"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9770:34:32",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9743:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9743:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9743:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9825:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9836:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9821:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9821:18:32"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9841:4:32",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9814:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9814:32:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9814:32:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9855:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9867:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9878:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9863:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9863:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9855:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9641:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9655:4:32",
                "type": ""
              }
            ],
            "src": "9490:398:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10067:181:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10084:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10095:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10077:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10077:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10077:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10118:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10129:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10114:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10114:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10134:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10107:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10107:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10107:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10157:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10168:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10153:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10153:18:32"
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10173:33:32",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10146:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10146:61:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10146:61:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10216:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10228:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10239:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10224:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10224:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10216:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10044:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10058:4:32",
                "type": ""
              }
            ],
            "src": "9893:355:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10427:181:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10444:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10455:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10437:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10437:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10437:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10478:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10489:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10474:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10474:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10494:2:32",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10467:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10467:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10467:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10517:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10528:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10513:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10513:18:32"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10533:33:32",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10506:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10506:61:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10506:61:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10576:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10588:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10599:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10584:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10584:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10576:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10404:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10418:4:32",
                "type": ""
              }
            ],
            "src": "10253:355:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10787:241:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10804:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10815:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10797:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10797:21:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10797:21:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10838:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10849:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10834:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10834:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10854:2:32",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10827:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10827:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10827:30:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10877:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10888:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10873:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10873:18:32"
                      },
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10893:34:32",
                        "type": "",
                        "value": "NonTransferableToken: Token tran"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10866:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10866:62:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10866:62:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10948:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10959:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10944:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10944:18:32"
                      },
                      {
                        "hexValue": "7366657273206172652064697361626c65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10964:21:32",
                        "type": "",
                        "value": "sfers are disabled."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10937:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10937:49:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10937:49:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10995:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11007:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11018:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11003:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11003:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10995:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10764:9:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10778:4:32",
                "type": ""
              }
            ],
            "src": "10613:415:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IStakedCSX_$1024__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$721__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_contract$_VestedCSXStakingContract_$2212__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IWETH_$991__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20Burnable_$1041__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, mul(0x4e487b71, exp(2, 224)))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, mul(0x4e487b71, exp(2, 224)))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"amount surpasses max supply\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Amount must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(exp(2, 160), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := sub(exp(2, 160), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), and(value6, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"NonTransferableToken: Token tran\")\n        mstore(add(headStart, 96), \"sfers are disabled.\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "294:2620:13:-:0;;;780:489;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:1:1;1821:7;:22;;;;2050:5:2;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:2;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;1023:11:13::1;:42:::0;;-1:-1:-1;;;;;;1023:42:13;;::::1;-1:-1:-1::0;;;;;1023:42:13;;::::1;;::::0;;;1076:9:::1;:36:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1123:4:13::1;:26:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1160:4:::1;:27:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;1198:3:::1;:25:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;1234:4:::1;:27:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;294:2620;;14:177:32;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;837:184::-;889:77;886:1;879:88;986:4;983:1;976:15;1010:4;1007:1;1000:15;1026:437;1111:1;1101:12;;1158:1;1148:12;;;1169:61;;1223:4;1215:6;1211:17;1201:27;;1169:61;1276:2;1268:6;1265:14;1245:18;1242:38;1239:218;;1313:77;1310:1;1303:88;1414:4;1411:1;1404:15;1442:4;1439:1;1432:15;1239:218;;1026:437;;;:::o;1594:551::-;1696:2;1691:3;1688:11;1685:454;;;1732:1;1757:5;1753:2;1746:17;1802:4;1798:2;1788:19;1874:4;1869:2;1857:10;1853:19;1849:30;1843:4;1839:41;1911:4;1899:10;1896:20;1893:47;;;-1:-1:-1;1934:4:32;1893:47;1991:4;1986:2;1981:3;1977:12;1973:23;1967:4;1963:34;1953:44;;2047:82;2065:2;2058:5;2055:13;2047:82;;;2110:17;;;2091:1;2080:13;2047:82;;;2051:3;;;1685:454;1594:551;;;:::o;2329:1359::-;2455:3;2449:10;2482:18;2474:6;2471:30;2468:56;;;2504:18;;:::i;:::-;2533:97;2623:6;2583:38;2615:4;2609:11;2583:38;:::i;:::-;2577:4;2533:97;:::i;:::-;2685:4;;2749:2;2738:14;;2766:1;2761:670;;;;3475:1;3492:6;3489:89;;;-1:-1:-1;3544:19:32;;;3538:26;3489:89;2310:1;2306:11;;;2293:1;2289:11;;2282:19;;;-1:-1:-1;;2270:32:32;2266:37;2256:48;;2253:65;3598:4;3591:81;;2731:951;;2761:670;1541:1;1534:14;;;1578:4;1565:18;;-1:-1:-1;;2797:20:32;;;2915:236;2929:7;2926:1;2923:14;2915:236;;;3018:19;;;3012:26;2997:42;;3110:27;;;;3078:1;3066:14;;;;2945:19;;2915:236;;;2919:3;3179:6;3170:7;3167:19;3164:208;;;3240:19;;;3234:26;3334:1;3349:2;3337:15;;3330:23;3327:1;3323:31;-1:-1:-1;;3311:44:32;3307:49;3292:65;3277:81;;3164:208;-1:-1:-1;;;;;3414:1:32;3402:14;3418:1;3398:22;3385:36;;-1:-1:-1;2329:1359:32:o;:::-;294:2620:13;;;;;;",
  "deployedSourceMap": "294:2620:13:-:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:2620:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:32;;1162:22;1144:41;;1132:2;1117:18;4431:197:2;1004:187:32;3242:106:2;3329:12;;3242:106;;;1342:25:32;;;1330:2;1315:18;3242:106:2;1196:177:32;5190:286:2;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:32;;1841:2;1826:18;3091:91:2;1711:184:32;533:52:13;;570:15;533:52;;5871:234:2;;;;;;:::i;:::-;;:::i;578:89:4:-;;;;;;:::i;:::-;;:::i;:::-;;394:27:13;;;;;-1:-1:-1;;;;;394:27:13;;;;;;-1:-1:-1;;;;;2268:32:32;;;2250:51;;2238:2;2223:18;394:27:13;2085:222:32;1455:1029:13;;;;;;:::i;:::-;;:::i;3406:125:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:2;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;973:161:4;;;;;;:::i;:::-;;:::i;452:18:13:-;;;;;-1:-1:-1;;;;;452:18:13;;;482:17;;;;;-1:-1:-1;;;;;482:17:13;;;2365:102:2;;;:::i;1378:68:13:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1378:68:13;;;6592:427:2;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;428:17:13:-;;;;;-1:-1:-1;;;;;428:17:13;;;354:33;;;;;-1:-1:-1;;;;;354:33:13;;;506:18;;;;;-1:-1:-1;;;;;506:18:13;;;3974:149:2;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:6;4568:32:2;719:10:6;4584:7:2;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:6;5373:38:2;5389:4;719:10:6;5404:6:2;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:2;;5190:286;-1:-1:-1;;;;5190:286:2:o;5871:234::-;5959:4;719:10:6;6013:64:2;719:10:6;6029:7:2;6066:10;6038:25;719:10:6;6029:7:2;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;:::-;578:89;:::o;1455:1029:13:-;1503:6;570:15;670:13;3329:12:2;;;3242:106;670:13:13;661:22;;:6;:22;:::i;:::-;:36;;639:113;;;;-1:-1:-1;;;;;639:113:13;;4513:2:32;639:113:13;;;4495:21:32;4552:2;4532:18;;;4525:30;4591:29;4571:18;;;4564:57;4638:18;;639:113:13;;;;;;;;;2261:21:1::1;:19;:21::i;:::-;1552:1:13::2;1543:6;:10;1535:52;;;::::0;-1:-1:-1;;;;;1535:52:13;;4869:2:32;1535:52:13::2;::::0;::::2;4851:21:32::0;4908:2;4888:18;;;4881:30;4947:31;4927:18;;;4920:59;4996:18;;1535:52:13::2;4667:353:32::0;1535:52:13::2;1677:11;::::0;:40:::2;::::0;-1:-1:-1;;;;;1677:40:13;;-1:-1:-1;;;;;1677:11:13;;::::2;::::0;:20:::2;::::0;:40:::2;::::0;1698:10:::2;::::0;1710:6;;1677:40:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1759:25;1765:10;1777:6;1759:5;:25::i;:::-;1886:10;1910:1;1869:28:::0;;;:16:::2;:28;::::0;;;;;-1:-1:-1;;;;;1869:28:13::2;1857:392;;2053:9;::::0;2122:3:::2;::::0;2153:4:::2;::::0;2185::::2;::::0;2217::::2;::::0;1960:277:::2;::::0;2015:10:::2;::::0;-1:-1:-1;;;;;2053:9:13;;::::2;::::0;2090:4:::2;::::0;2122:3;;::::2;::::0;2153:4;;::::2;::::0;2185;;::::2;::::0;2217;::::2;::::0;1960:277:::2;::::0;::::2;:::i;:::-;-1:-1:-1::0;;;;;5675:15:32;;;5657:34;;5727:15;;;5722:2;5707:18;;5700:43;5779:15;;;5774:2;5759:18;;5752:43;5831:15;;;5826:2;5811:18;;5804:43;5884:15;;5878:3;5863:19;;5856:44;5937:15;;5640:3;5916:19;;5909:44;5990:15;;;5984:3;5969:19;;5962:44;5606:3;5591:19;1960:277:13::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1946:10:13::2;1929:28;::::0;;;:16:::2;:28;::::0;;;;:308;;-1:-1:-1;;;;;;1929:308:13::2;-1:-1:-1::0;;;;;1929:308:13;;;::::2;::::0;;;::::2;::::0;;1857:392:::2;2315:3;::::0;2352:10:::2;2315:3;2335:28:::0;;;:16:::2;:28;::::0;;;;;;;2315:58;;-1:-1:-1;;;;;2315:58:13;;-1:-1:-1;;;;;2315:3:13;;::::2;::::0;:11:::2;::::0;:58:::2;::::0;2335:28;::::2;::::0;2366:6;;2315:58:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2449:10:13::2;2432:28;::::0;;;:16:::2;:28;::::0;;;;;;;:44;;-1:-1:-1;;;;;2432:44:13;;::::2;::::0;::::2;1342:25:32::0;;;-1:-1:-1;;;;;2432:28:13;;::::2;::::0;:36:::2;::::0;1315:18:32;;2432:44:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;1455:1029:13::0;;:::o;973:161:4:-;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2365:102:2:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:6;6685:4:2;6766:25;719:10:6;6783:7:2;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;;;6801:85:2;;6501:2:32;6801:85:2;;;6483:21:32;6540:2;6520:18;;;6513:30;6579:34;6559:18;;;6552:62;-1:-1:-1;;;;;6630:18:32;;;6623:35;6675:19;;6801:85:2;6299:401:32;6801:85:2;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:6;3860:28:2;719:10:6;3877:2:2;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:2;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:2;;10627:68;;;;-1:-1:-1;;;;;10627:68:2;;6907:2:32;10627:68:2;;;6889:21:32;6946:2;6926:18;;;6919:30;6985:34;6965:18;;;6958:62;-1:-1:-1;;;;;7036:18:32;;;7029:34;7080:19;;10627:68:2;6705:400:32;10627:68:2;-1:-1:-1;;;;;10713:21:2;;10705:68;;;;-1:-1:-1;;;;;10705:68:2;;7312:2:32;10705:68:2;;;7294:21:32;7351:2;7331:18;;;7324:30;7390:34;7370:18;;;7363:62;-1:-1:-1;;;;;7441:18:32;;;7434:32;7483:19;;10705:68:2;7110:398:32;10705:68:2;-1:-1:-1;;;;;10784:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:32;;;10835:32:2;;1315:18:32;10835:32:2;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:2;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;;;11404:68:2;;7715:2:32;11404:68:2;;;7697:21:32;7754:2;7734:18;;;7727:30;7793:31;7773:18;;;7766:59;7842:18;;11404:68:2;7513:353:32;11404:68:2;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:2;;7591:68;;;;-1:-1:-1;;;;;7591:68:2;;8073:2:32;7591:68:2;;;8055:21:32;8112:2;8092:18;;;8085:30;8151:34;8131:18;;;8124:62;-1:-1:-1;;;;;8202:18:32;;;8195:35;8247:19;;7591:68:2;7871:401:32;7591:68:2;-1:-1:-1;;;;;7677:16:2;;7669:64;;;;-1:-1:-1;;;;;7669:64:2;;8479:2:32;7669:64:2;;;8461:21:32;8518:2;8498:18;;;8491:30;8557:34;8537:18;;;8530:62;-1:-1:-1;;;;;8608:18:32;;;8601:33;8651:19;;7669:64:2;8277:399:32;7669:64:2;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;-1:-1:-1;;;;;7815:15:2;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;;;7840:72:2;;8883:2:32;7840:72:2;;;8865:21:32;8922:2;8902:18;;;8895:30;8961:34;8941:18;;;8934:62;-1:-1:-1;;;;;9012:18:32;;;9005:36;9058:19;;7840:72:2;8681:402:32;7840:72:2;-1:-1:-1;;;;;7946:15:2;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;-1:-1:-1;;;;;;;;;;;8210:26:2;;;7978:6;1342:25:32;;1330:2;1315:18;;1196:177;8210:26:2;;;;;;;;8247:37;9422:659;;-1:-1:-1;;;;;9505:21:2;;9497:67;;;;-1:-1:-1;;;;;9497:67:2;;9290:2:32;9497:67:2;;;9272:21:32;9329:2;9309:18;;;9302:30;9368:34;9348:18;;;9341:62;-1:-1:-1;;;;;9419:18:32;;;9412:31;9460:19;;9497:67:2;9088:397:32;9497:67:2;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;-1:-1:-1;;;;;9660:18:2;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;;;9688:71:2;;9692:2:32;9688:71:2;;;9674:21:32;9731:2;9711:18;;;9704:30;9770:34;9750:18;;;9743:62;-1:-1:-1;;;;;9821:18:32;;;9814:32;9863:19;;9688:71:2;9490:398:32;9688:71:2;-1:-1:-1;;;;;9793:18:2;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1342:25:32;;;9793:18:2;;;-1:-1:-1;;;;;;;;;;;9978:37:2;1315:18:32;9978:37:2;1196:177:32;2336:287:1;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;;;2460:63:1;;10095:2:32;2460:63:1;;;10077:21:32;10134:2;10114:18;;;10107:30;10173:33;10153:18;;;10146:61;10224:18;;2460:63:1;9893:355:32;2460:63:1;1759:1;2598:7;:18;2336:287::o;8567:535:2:-;-1:-1:-1;;;;;8650:21:2;;8642:65;;;;-1:-1:-1;;;;;8642:65:2;;10455:2:32;8642:65:2;;;10437:21:32;10494:2;10474:18;;;10467:30;10533:33;10513:18;;;10506:61;10584:18;;8642:65:2;10253:355:32;8642:65:2;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:2;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1342:25:32;;;-1:-1:-1;;;;;;;;;;;8999:37:2;1315:18:32;8999:37:2;;;;;;;1455:1029:13;;:::o;2591:320::-;-1:-1:-1;;;;;2785:18:13;;;;:38;;-1:-1:-1;;;;;;2807:16:13;;;2785:38;2781:51;;;2591:320;;;:::o;2781:51::-;2842:61;;-1:-1:-1;;;;;2842:61:13;;10815:2:32;2842:61:13;;;10797:21:32;10854:2;10834:18;;;10827:30;10893:34;10873:18;;;10866:62;-1:-1:-1;;;;;10944:18:32;;;10937:49;11003:19;;2842:61:13;10613:415:32;-1:-1:-1;;;;;;;;:::o;14:548:32:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:32;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:32:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:32;;1900:180;-1:-1:-1;1900:180:32:o;2312:186::-;2371:6;2424:2;2412:9;2403:7;2399:23;2395:32;2392:52;;;2440:1;2437;2430:12;2392:52;2463:29;2482:9;2463:29;:::i;:::-;2453:39;2312:186;-1:-1:-1;;;2312:186:32:o;3418:260::-;3486:6;3494;3547:2;3535:9;3526:7;3522:23;3518:32;3515:52;;;3563:1;3560;3553:12;3515:52;3586:29;3605:9;3586:29;:::i;:::-;3576:39;;3634:38;3668:2;3657:9;3653:18;3634:38;:::i;:::-;3624:48;;3418:260;;;;;:::o;3683:388::-;3768:1;3758:12;;3815:1;3805:12;;;3826:61;;3880:4;3872:6;3868:17;3858:27;;3826:61;3933:2;3925:6;3922:14;3902:18;3899:38;3896:169;;-1:-1:-1;;;;;3967:1:32;3960:39;;;4022:4;4019:1;4012:15;4050:4;;4040:15;3896:169;;3683:388;;;:::o;4076:230::-;4141:9;;;4162:10;;;4159:141;;;-1:-1:-1;;;;;4202:1:32;4195:39;;;4257:4;4254:1;4247:15;4285:4;;4275:15;5025:274;-1:-1:-1;;;;;5217:32:32;;;;5199:51;;5281:2;5266:18;;5259:34;5187:2;5172:18;;5025:274::o;6017:277::-;6084:6;6137:2;6125:9;6116:7;6112:23;6108:32;6105:52;;;6153:1;6150;6143:12;6105:52;6185:9;6179:16;6238:5;6231:13;6224:21;6217:5;6214:32;6204:60;;6260:1;6257;6250:12",
  "source": "// SPDX-License-Identifier: MIT\r\n// CSX Vesting Contract v2\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport {ERC20, IERC20, ReentrancyGuard, IWETH, IERC20Burnable} from \"./Interfaces.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\nimport \"./StakedCSXContract.sol\";\r\n\r\ncontract VestedCSX is ReentrancyGuard, ERC20Burnable {\r\n    IERC20Burnable public EscrowedCSX;\r\n    IStakedCSX public StakedCSX;\r\n    IWETH public WETH;\r\n    IERC20 public USDC;     \r\n    IERC20 public CSX;\r\n    IERC20 public USDT;\r\n\r\n    uint256 public constant MAX_SUPPLY = 100000000 ether;\r\n\r\n    modifier mintable(uint256 amount) {\r\n        require(\r\n            amount + totalSupply() <= MAX_SUPPLY,\r\n            \"amount surpasses max supply\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _eCsxAddress,\r\n        address _sCsxAddress,\r\n        address _wethAddress,\r\n        address _usdcAddress,\r\n        address _csxAddress,\r\n        address _usdtAddress\r\n    ) ERC20(\"Vested CSX\", \"vCSX\") {\r\n        EscrowedCSX = IERC20Burnable(_eCsxAddress);\r\n        StakedCSX = IStakedCSX(_sCsxAddress);\r\n        WETH = IWETH(_wethAddress);\r\n        USDC = IERC20(_usdcAddress);\r\n        CSX = IERC20(_csxAddress);\r\n        USDT = IERC20(_usdtAddress);\r\n    }\r\n\r\n    //=================================== EXTERNAL ==============================================\r\n\r\n    mapping(address => VestedCSXStakingContract) public stakingContracts;\r\n\r\n    function vest(uint256 amount) external mintable(amount) nonReentrant {\r\n        require(amount > 0, \"Amount must be greater than 0\"); // To prevent users wasting gas\r\n\r\n        // Burn the deposited escrow tokens\r\n        EscrowedCSX.burnFrom(msg.sender, amount);\r\n\r\n        // Mint vCSX tokens\r\n        _mint(msg.sender, amount);\r\n\r\n        // Create Staking Contract if not created for user\r\n        if (address(stakingContracts[msg.sender]) == address(0)) {\r\n            stakingContracts[msg.sender] = new VestedCSXStakingContract(\r\n                address(msg.sender),\r\n                address(StakedCSX),\r\n                address(this),\r\n                address(CSX),\r\n                address(USDC),\r\n                address(USDT),\r\n                address(WETH)\r\n            );\r\n        } \r\n\r\n        // Approve Staking Contract to transfer CSX\r\n        CSX.approve(address(stakingContracts[msg.sender]), amount);\r\n\r\n        // Deposit CSX into Staking Contract\r\n        stakingContracts[msg.sender].deposit(amount);\r\n    }\r\n\r\n    //=================================== INTERNAL ==============================================\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal override {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n        if (from == address(0) || to == address(0)) return;\r\n        revert(\"NonTransferableToken: Token transfers are disabled.\");\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Charl\\Documents\\Projects\\SteamMarket\\CSX\\csx-contracts\\contracts\\CSX\\VestedCSX.sol",
  "ast": {
    "absolutePath": "project:/contracts/CSX/VestedCSX.sol",
    "exportedSymbols": {
      "Context": [
        812
      ],
      "ERC20": [
        643
      ],
      "ERC20Burnable": [
        765
      ],
      "IERC20": [
        721
      ],
      "IERC20Burnable": [
        1041
      ],
      "IERC20Metadata": [
        790
      ],
      "IStakedCSX": [
        1024
      ],
      "IWETH": [
        991
      ],
      "ReentrancyGuard": [
        56
      ],
      "VestedCSX": [
        2469
      ],
      "VestedCSXStakingContract": [
        2212
      ],
      "Vesting": [
        1888
      ]
    },
    "id": 2470,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2214,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:13"
      },
      {
        "absolutePath": "project:/contracts/CSX/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 2220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 1042,
        "src": "90:87:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2215,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 643,
              "src": "98:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2216,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 721,
              "src": "105:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2217,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56,
              "src": "113:15:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2218,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 991,
              "src": "130:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2219,
              "name": "IERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1041,
              "src": "137:14:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 2221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 766,
        "src": "179:74:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CSX/StakedCSXContract.sol",
        "file": "./StakedCSXContract.sol",
        "id": 2222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 2213,
        "src": "257:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2223,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "316:15:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56,
              "src": "316:15:13"
            },
            "id": 2224,
            "nodeType": "InheritanceSpecifier",
            "src": "316:15:13"
          },
          {
            "baseName": {
              "id": 2225,
              "name": "ERC20Burnable",
              "nameLocations": [
                "333:13:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 765,
              "src": "333:13:13"
            },
            "id": 2226,
            "nodeType": "InheritanceSpecifier",
            "src": "333:13:13"
          }
        ],
        "canonicalName": "VestedCSX",
        "contractDependencies": [
          2212
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2469,
        "linearizedBaseContracts": [
          2469,
          765,
          643,
          790,
          721,
          812,
          56
        ],
        "name": "VestedCSX",
        "nameLocation": "303:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c1456ab0",
            "id": 2229,
            "mutability": "mutable",
            "name": "EscrowedCSX",
            "nameLocation": "376:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "354:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
              "typeString": "contract IERC20Burnable"
            },
            "typeName": {
              "id": 2228,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2227,
                "name": "IERC20Burnable",
                "nameLocations": [
                  "354:14:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1041,
                "src": "354:14:13"
              },
              "referencedDeclaration": 1041,
              "src": "354:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                "typeString": "contract IERC20Burnable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "59d6613e",
            "id": 2232,
            "mutability": "mutable",
            "name": "StakedCSX",
            "nameLocation": "412:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "394:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakedCSX_$1024",
              "typeString": "contract IStakedCSX"
            },
            "typeName": {
              "id": 2231,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2230,
                "name": "IStakedCSX",
                "nameLocations": [
                  "394:10:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1024,
                "src": "394:10:13"
              },
              "referencedDeclaration": 1024,
              "src": "394:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                "typeString": "contract IStakedCSX"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 2235,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "441:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "428:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$991",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 2234,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2233,
                "name": "IWETH",
                "nameLocations": [
                  "428:5:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 991,
                "src": "428:5:13"
              },
              "referencedDeclaration": 991,
              "src": "428:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$991",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 2238,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "466:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "452:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2237,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2236,
                "name": "IERC20",
                "nameLocations": [
                  "452:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "452:6:13"
              },
              "referencedDeclaration": 721,
              "src": "452:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94469837",
            "id": 2241,
            "mutability": "mutable",
            "name": "CSX",
            "nameLocation": "496:3:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "482:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2240,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2239,
                "name": "IERC20",
                "nameLocations": [
                  "482:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "482:6:13"
              },
              "referencedDeclaration": 721,
              "src": "482:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c54e44eb",
            "id": 2244,
            "mutability": "mutable",
            "name": "USDT",
            "nameLocation": "520:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "506:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2243,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2242,
                "name": "IERC20",
                "nameLocations": [
                  "506:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "506:6:13"
              },
              "referencedDeclaration": 721,
              "src": "506:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 2247,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "557:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "533:52:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2245,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "533:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 2246,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:15:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2262,
              "nodeType": "Block",
              "src": "628:144:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2252,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "661:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2253,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "670:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "670:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "661:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2256,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2247,
                          "src": "687:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "661:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "id": 2258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        },
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        }
                      ],
                      "id": 2251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "639:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:113:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2260,
                  "nodeType": "ExpressionStatement",
                  "src": "639:113:13"
                },
                {
                  "id": 2261,
                  "nodeType": "PlaceholderStatement",
                  "src": "763:1:13"
                }
              ]
            },
            "id": 2263,
            "name": "mintable",
            "nameLocation": "603:8:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "620:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "612:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:16:13"
            },
            "src": "594:178:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1012:257:13",
              "statements": [
                {
                  "expression": {
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2282,
                      "name": "EscrowedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2229,
                      "src": "1023:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2284,
                          "name": "_eCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2265,
                          "src": "1052:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2283,
                        "name": "IERC20Burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "1037:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Burnable_$1041_$",
                          "typeString": "type(contract IERC20Burnable)"
                        }
                      },
                      "id": 2285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1037:28:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "src": "1023:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                      "typeString": "contract IERC20Burnable"
                    }
                  },
                  "id": 2287,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:42:13"
                },
                {
                  "expression": {
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2288,
                      "name": "StakedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2232,
                      "src": "1076:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2290,
                          "name": "_sCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "1099:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2289,
                        "name": "IStakedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1024,
                        "src": "1088:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakedCSX_$1024_$",
                          "typeString": "type(contract IStakedCSX)"
                        }
                      },
                      "id": 2291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "src": "1076:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                      "typeString": "contract IStakedCSX"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:36:13"
                },
                {
                  "expression": {
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2294,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "1123:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2296,
                          "name": "_wethAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2269,
                          "src": "1136:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2295,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1130:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$991_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "1123:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$991",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:26:13"
                },
                {
                  "expression": {
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2300,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "1160:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2302,
                          "name": "_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2271,
                          "src": "1174:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2301,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1167:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1167:20:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1160:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:27:13"
                },
                {
                  "expression": {
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2306,
                      "name": "CSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "1198:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2308,
                          "name": "_csxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2273,
                          "src": "1211:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2307,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1204:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1204:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1198:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2311,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:25:13"
                },
                {
                  "expression": {
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2312,
                      "name": "USDT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "1234:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2314,
                          "name": "_usdtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "1248:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2313,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1241:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:20:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1234:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:27:13"
                }
              ]
            },
            "id": 2319,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56657374656420435358",
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "990:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ac08263165eaf05a47767247310056c2342d52319a188d54c7e66cbb296e2b5",
                      "typeString": "literal_string \"Vested CSX\""
                    },
                    "value": "Vested CSX"
                  },
                  {
                    "hexValue": "76435358",
                    "id": 2279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1004:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_95045c7b9cd123e9e5af8c43e9b9f456115dc89d06cb7b1a5fa2b306609d1377",
                      "typeString": "literal_string \"vCSX\""
                    },
                    "value": "vCSX"
                  }
                ],
                "id": 2280,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2277,
                  "name": "ERC20",
                  "nameLocations": [
                    "984:5:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 643,
                  "src": "984:5:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "984:27:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "_eCsxAddress",
                  "nameLocation": "810:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "802:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "_sCsxAddress",
                  "nameLocation": "841:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "833:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "872:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "864:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "903:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "895:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "_csxAddress",
                  "nameLocation": "934:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "926:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2275,
                  "mutability": "mutable",
                  "name": "_usdtAddress",
                  "nameLocation": "964:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "956:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:192:13"
            },
            "returnParameters": {
              "id": 2281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:13"
            },
            "scope": 2469,
            "src": "780:489:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9bc181d2",
            "id": 2324,
            "mutability": "mutable",
            "name": "stakingContracts",
            "nameLocation": "1430:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "1378:68:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
              "typeString": "mapping(address => contract VestedCSXStakingContract)"
            },
            "typeName": {
              "id": 2323,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2320,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1386:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1378:44:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                "typeString": "mapping(address => contract VestedCSXStakingContract)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2322,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2321,
                  "name": "VestedCSXStakingContract",
                  "nameLocations": [
                    "1397:24:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2212,
                  "src": "1397:24:13"
                },
                "referencedDeclaration": 2212,
                "src": "1397:24:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                  "typeString": "contract VestedCSXStakingContract"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2429,
              "nodeType": "Block",
              "src": "1524:960:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2335,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2326,
                          "src": "1543:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1543:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 2334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1535:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:52:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1698:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1702:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1698:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "1710:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2341,
                        "name": "EscrowedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2229,
                        "src": "1677:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                          "typeString": "contract IERC20Burnable"
                        }
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1689:8:13",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1040,
                      "src": "1677:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2350,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1765:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1769:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1765:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2352,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "1777:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2349,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "1759:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:25:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 2357,
                            "name": "stakingContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2324,
                            "src": "1869:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                              "typeString": "mapping(address => contract VestedCSXStakingContract)"
                            }
                          },
                          "id": 2360,
                          "indexExpression": {
                            "expression": {
                              "id": 2358,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1886:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1890:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1886:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1869:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        ],
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1861:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1861:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1861:37:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1910:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1902:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1902:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1861:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2407,
                  "nodeType": "IfStatement",
                  "src": "1857:392:13",
                  "trueBody": {
                    "id": 2406,
                    "nodeType": "Block",
                    "src": "1914:335:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2367,
                              "name": "stakingContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "1929:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "mapping(address => contract VestedCSXStakingContract)"
                              }
                            },
                            "id": 2370,
                            "indexExpression": {
                              "expression": {
                                "id": 2368,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1946:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1950:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1946:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2376,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2015:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2019:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2015:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2007:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2374,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2007:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2007:19:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2381,
                                    "name": "StakedCSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "2053:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  ],
                                  "id": 2380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2045:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2379,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2045:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2045:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2385,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2090:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2469",
                                      "typeString": "contract VestedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2469",
                                      "typeString": "contract VestedCSX"
                                    }
                                  ],
                                  "id": 2384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2082:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2383,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2082:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2082:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2389,
                                    "name": "CSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2241,
                                    "src": "2122:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2114:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2387,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2114:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2114:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2393,
                                    "name": "USDC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2238,
                                    "src": "2153:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2145:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2391,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2145:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2145:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2397,
                                    "name": "USDT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2244,
                                    "src": "2185:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2177:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2395,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2177:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2177:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2401,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "2217:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  ],
                                  "id": 2400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2209:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2399,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2209:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2209:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1960:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "function (address,address,address,address,address,address,address) returns (contract VestedCSXStakingContract)"
                              },
                              "typeName": {
                                "id": 2372,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2371,
                                  "name": "VestedCSXStakingContract",
                                  "nameLocations": [
                                    "1964:24:13"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2212,
                                  "src": "1964:24:13"
                                },
                                "referencedDeclaration": 2212,
                                "src": "1964:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                                  "typeString": "contract VestedCSXStakingContract"
                                }
                              }
                            },
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1960:277:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          },
                          "src": "1929:308:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        },
                        "id": 2405,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:308:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2413,
                              "name": "stakingContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "2335:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "mapping(address => contract VestedCSXStakingContract)"
                              }
                            },
                            "id": 2416,
                            "indexExpression": {
                              "expression": {
                                "id": 2414,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2352:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2356:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2352:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2335:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          ],
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2327:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2327:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2327:37:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "2366:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2408,
                        "name": "CSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2315:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$721",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2319:7:13",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "2315:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "2469:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2421,
                          "name": "stakingContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2324,
                          "src": "2432:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                            "typeString": "mapping(address => contract VestedCSXStakingContract)"
                          }
                        },
                        "id": 2424,
                        "indexExpression": {
                          "expression": {
                            "id": 2422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2449:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2453:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2449:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2432:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                          "typeString": "contract VestedCSXStakingContract"
                        }
                      },
                      "id": 2425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2461:7:13",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2045,
                      "src": "2432:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2428,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:44:13"
                }
              ]
            },
            "functionSelector": "6a760b80",
            "id": 2430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2329,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2326,
                    "src": "1503:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2328,
                  "name": "mintable",
                  "nameLocations": [
                    "1494:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2263,
                  "src": "1494:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1494:16:13"
              },
              {
                "id": 2332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2331,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1511:12:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1511:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1511:12:13"
              }
            ],
            "name": "vest",
            "nameLocation": "1464:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1477:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2430,
                  "src": "1469:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:16:13"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:0:13"
            },
            "scope": 2469,
            "src": "1455:1029:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              631
            ],
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "2715:196:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2443,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "2753:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2444,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "2759:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2445,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "2763:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2440,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2726:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VestedCSX_$2469_$",
                          "typeString": "type(contract super VestedCSX)"
                        }
                      },
                      "id": 2442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2732:20:13",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 631,
                      "src": "2726:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:44:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2448,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "2785:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2801:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2793:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2449,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2793:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2793:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2785:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2454,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "2807:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2821:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2813:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2455,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2813:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2813:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2807:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2785:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2462,
                  "nodeType": "IfStatement",
                  "src": "2781:51:13",
                  "trueBody": {
                    "functionReturnParameters": 2439,
                    "id": 2461,
                    "nodeType": "Return",
                    "src": "2825:7:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e7366657273206172652064697361626c65642e",
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2849:53:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        },
                        "value": "NonTransferableToken: Token transfers are disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        }
                      ],
                      "id": 2463,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2842:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:61:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:61:13"
                }
              ]
            },
            "id": 2468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2600:20:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2706:8:13"
            },
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2639:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2631:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2662:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2654:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2683:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2675:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2620:76:13"
            },
            "returnParameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2715:0:13"
            },
            "scope": 2469,
            "src": "2591:320:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2470,
        "src": "294:2620:13",
        "usedErrors": []
      }
    ],
    "src": "63:2853:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CSX/VestedCSX.sol",
    "exportedSymbols": {
      "Context": [
        812
      ],
      "ERC20": [
        643
      ],
      "ERC20Burnable": [
        765
      ],
      "IERC20": [
        721
      ],
      "IERC20Burnable": [
        1041
      ],
      "IERC20Metadata": [
        790
      ],
      "IStakedCSX": [
        1024
      ],
      "IWETH": [
        991
      ],
      "ReentrancyGuard": [
        56
      ],
      "VestedCSX": [
        2469
      ],
      "VestedCSXStakingContract": [
        2212
      ],
      "Vesting": [
        1888
      ]
    },
    "id": 2470,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2214,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:13"
      },
      {
        "absolutePath": "project:/contracts/CSX/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 2220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 1042,
        "src": "90:87:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2215,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 643,
              "src": "98:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2216,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 721,
              "src": "105:6:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2217,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56,
              "src": "113:15:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2218,
              "name": "IWETH",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 991,
              "src": "130:5:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2219,
              "name": "IERC20Burnable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1041,
              "src": "137:14:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 2221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 766,
        "src": "179:74:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/CSX/StakedCSXContract.sol",
        "file": "./StakedCSXContract.sol",
        "id": 2222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 2213,
        "src": "257:33:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2223,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "316:15:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56,
              "src": "316:15:13"
            },
            "id": 2224,
            "nodeType": "InheritanceSpecifier",
            "src": "316:15:13"
          },
          {
            "baseName": {
              "id": 2225,
              "name": "ERC20Burnable",
              "nameLocations": [
                "333:13:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 765,
              "src": "333:13:13"
            },
            "id": 2226,
            "nodeType": "InheritanceSpecifier",
            "src": "333:13:13"
          }
        ],
        "canonicalName": "VestedCSX",
        "contractDependencies": [
          2212
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2469,
        "linearizedBaseContracts": [
          2469,
          765,
          643,
          790,
          721,
          812,
          56
        ],
        "name": "VestedCSX",
        "nameLocation": "303:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c1456ab0",
            "id": 2229,
            "mutability": "mutable",
            "name": "EscrowedCSX",
            "nameLocation": "376:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "354:33:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
              "typeString": "contract IERC20Burnable"
            },
            "typeName": {
              "id": 2228,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2227,
                "name": "IERC20Burnable",
                "nameLocations": [
                  "354:14:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1041,
                "src": "354:14:13"
              },
              "referencedDeclaration": 1041,
              "src": "354:14:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                "typeString": "contract IERC20Burnable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "59d6613e",
            "id": 2232,
            "mutability": "mutable",
            "name": "StakedCSX",
            "nameLocation": "412:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "394:27:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakedCSX_$1024",
              "typeString": "contract IStakedCSX"
            },
            "typeName": {
              "id": 2231,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2230,
                "name": "IStakedCSX",
                "nameLocations": [
                  "394:10:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1024,
                "src": "394:10:13"
              },
              "referencedDeclaration": 1024,
              "src": "394:10:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                "typeString": "contract IStakedCSX"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ad5c4648",
            "id": 2235,
            "mutability": "mutable",
            "name": "WETH",
            "nameLocation": "441:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "428:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH_$991",
              "typeString": "contract IWETH"
            },
            "typeName": {
              "id": 2234,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2233,
                "name": "IWETH",
                "nameLocations": [
                  "428:5:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 991,
                "src": "428:5:13"
              },
              "referencedDeclaration": 991,
              "src": "428:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH_$991",
                "typeString": "contract IWETH"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89a30271",
            "id": 2238,
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "466:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "452:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2237,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2236,
                "name": "IERC20",
                "nameLocations": [
                  "452:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "452:6:13"
              },
              "referencedDeclaration": 721,
              "src": "452:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94469837",
            "id": 2241,
            "mutability": "mutable",
            "name": "CSX",
            "nameLocation": "496:3:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "482:17:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2240,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2239,
                "name": "IERC20",
                "nameLocations": [
                  "482:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "482:6:13"
              },
              "referencedDeclaration": 721,
              "src": "482:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c54e44eb",
            "id": 2244,
            "mutability": "mutable",
            "name": "USDT",
            "nameLocation": "520:4:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "506:18:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$721",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 2243,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2242,
                "name": "IERC20",
                "nameLocations": [
                  "506:6:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 721,
                "src": "506:6:13"
              },
              "referencedDeclaration": 721,
              "src": "506:6:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$721",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32cb6b0c",
            "id": 2247,
            "mutability": "constant",
            "name": "MAX_SUPPLY",
            "nameLocation": "557:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "533:52:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2245,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "533:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 2246,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "570:15:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000000000"
              },
              "value": "100000000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2262,
              "nodeType": "Block",
              "src": "628:144:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2252,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2249,
                            "src": "661:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2253,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 141,
                              "src": "670:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "670:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "661:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2256,
                          "name": "MAX_SUPPLY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2247,
                          "src": "687:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "661:36:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e7420737572706173736573206d617820737570706c79",
                        "id": 2258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:29:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        },
                        "value": "amount surpasses max supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_525da44df99a6be145f659d35aa0393fe8901b47e014051855fef6e123d8158f",
                          "typeString": "literal_string \"amount surpasses max supply\""
                        }
                      ],
                      "id": 2251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "639:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:113:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2260,
                  "nodeType": "ExpressionStatement",
                  "src": "639:113:13"
                },
                {
                  "id": 2261,
                  "nodeType": "PlaceholderStatement",
                  "src": "763:1:13"
                }
              ]
            },
            "id": 2263,
            "name": "mintable",
            "nameLocation": "603:8:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "620:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2263,
                  "src": "612:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "611:16:13"
            },
            "src": "594:178:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2318,
              "nodeType": "Block",
              "src": "1012:257:13",
              "statements": [
                {
                  "expression": {
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2282,
                      "name": "EscrowedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2229,
                      "src": "1023:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2284,
                          "name": "_eCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2265,
                          "src": "1052:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2283,
                        "name": "IERC20Burnable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "1037:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Burnable_$1041_$",
                          "typeString": "type(contract IERC20Burnable)"
                        }
                      },
                      "id": 2285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1037:28:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                        "typeString": "contract IERC20Burnable"
                      }
                    },
                    "src": "1023:42:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                      "typeString": "contract IERC20Burnable"
                    }
                  },
                  "id": 2287,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:42:13"
                },
                {
                  "expression": {
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2288,
                      "name": "StakedCSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2232,
                      "src": "1076:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2290,
                          "name": "_sCsxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2267,
                          "src": "1099:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2289,
                        "name": "IStakedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1024,
                        "src": "1088:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakedCSX_$1024_$",
                          "typeString": "type(contract IStakedCSX)"
                        }
                      },
                      "id": 2291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1088:24:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                        "typeString": "contract IStakedCSX"
                      }
                    },
                    "src": "1076:36:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                      "typeString": "contract IStakedCSX"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:36:13"
                },
                {
                  "expression": {
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2294,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "1123:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2296,
                          "name": "_wethAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2269,
                          "src": "1136:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2295,
                        "name": "IWETH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 991,
                        "src": "1130:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWETH_$991_$",
                          "typeString": "type(contract IWETH)"
                        }
                      },
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1130:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH_$991",
                        "typeString": "contract IWETH"
                      }
                    },
                    "src": "1123:26:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$991",
                      "typeString": "contract IWETH"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:26:13"
                },
                {
                  "expression": {
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2300,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "1160:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2302,
                          "name": "_usdcAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2271,
                          "src": "1174:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2301,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1167:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1167:20:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1160:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:27:13"
                },
                {
                  "expression": {
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2306,
                      "name": "CSX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "1198:3:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2308,
                          "name": "_csxAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2273,
                          "src": "1211:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2307,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1204:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1204:19:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1198:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2311,
                  "nodeType": "ExpressionStatement",
                  "src": "1198:25:13"
                },
                {
                  "expression": {
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2312,
                      "name": "USDT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2244,
                      "src": "1234:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2314,
                          "name": "_usdtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2275,
                          "src": "1248:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2313,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "1241:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$721_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1241:20:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$721",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1234:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$721",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:27:13"
                }
              ]
            },
            "id": 2319,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "56657374656420435358",
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "990:12:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0ac08263165eaf05a47767247310056c2342d52319a188d54c7e66cbb296e2b5",
                      "typeString": "literal_string \"Vested CSX\""
                    },
                    "value": "Vested CSX"
                  },
                  {
                    "hexValue": "76435358",
                    "id": 2279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1004:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_95045c7b9cd123e9e5af8c43e9b9f456115dc89d06cb7b1a5fa2b306609d1377",
                      "typeString": "literal_string \"vCSX\""
                    },
                    "value": "vCSX"
                  }
                ],
                "id": 2280,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2277,
                  "name": "ERC20",
                  "nameLocations": [
                    "984:5:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 643,
                  "src": "984:5:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "984:27:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2265,
                  "mutability": "mutable",
                  "name": "_eCsxAddress",
                  "nameLocation": "810:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "802:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2267,
                  "mutability": "mutable",
                  "name": "_sCsxAddress",
                  "nameLocation": "841:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "833:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2269,
                  "mutability": "mutable",
                  "name": "_wethAddress",
                  "nameLocation": "872:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "864:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2271,
                  "mutability": "mutable",
                  "name": "_usdcAddress",
                  "nameLocation": "903:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "895:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2273,
                  "mutability": "mutable",
                  "name": "_csxAddress",
                  "nameLocation": "934:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "926:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2275,
                  "mutability": "mutable",
                  "name": "_usdtAddress",
                  "nameLocation": "964:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2319,
                  "src": "956:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:192:13"
            },
            "returnParameters": {
              "id": 2281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:13"
            },
            "scope": 2469,
            "src": "780:489:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9bc181d2",
            "id": 2324,
            "mutability": "mutable",
            "name": "stakingContracts",
            "nameLocation": "1430:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "1378:68:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
              "typeString": "mapping(address => contract VestedCSXStakingContract)"
            },
            "typeName": {
              "id": 2323,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2320,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1386:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1378:44:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                "typeString": "mapping(address => contract VestedCSXStakingContract)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2322,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2321,
                  "name": "VestedCSXStakingContract",
                  "nameLocations": [
                    "1397:24:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2212,
                  "src": "1397:24:13"
                },
                "referencedDeclaration": 2212,
                "src": "1397:24:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                  "typeString": "contract VestedCSXStakingContract"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2429,
              "nodeType": "Block",
              "src": "1524:960:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2335,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2326,
                          "src": "1543:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1543:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:31:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        },
                        "value": "Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
                          "typeString": "literal_string \"Amount must be greater than 0\""
                        }
                      ],
                      "id": 2334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1535:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2340,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:52:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2344,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1698:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1702:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1698:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2346,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "1710:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2341,
                        "name": "EscrowedCSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2229,
                        "src": "1677:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Burnable_$1041",
                          "typeString": "contract IERC20Burnable"
                        }
                      },
                      "id": 2343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1689:8:13",
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1040,
                      "src": "1677:20:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:40:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "1677:40:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2350,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1765:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1769:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1765:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2352,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "1777:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2349,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "1759:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:25:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 2357,
                            "name": "stakingContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2324,
                            "src": "1869:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                              "typeString": "mapping(address => contract VestedCSXStakingContract)"
                            }
                          },
                          "id": 2360,
                          "indexExpression": {
                            "expression": {
                              "id": 2358,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1886:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1890:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1886:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1869:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        ],
                        "id": 2356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1861:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1861:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1861:37:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1910:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1902:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1902:7:13",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1902:10:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1861:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2407,
                  "nodeType": "IfStatement",
                  "src": "1857:392:13",
                  "trueBody": {
                    "id": 2406,
                    "nodeType": "Block",
                    "src": "1914:335:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 2404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2367,
                              "name": "stakingContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "1929:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "mapping(address => contract VestedCSXStakingContract)"
                              }
                            },
                            "id": 2370,
                            "indexExpression": {
                              "expression": {
                                "id": 2368,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1946:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1950:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1946:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1929:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2376,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2015:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2019:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2015:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2007:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2374,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2007:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2007:19:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2381,
                                    "name": "StakedCSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "2053:9:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStakedCSX_$1024",
                                      "typeString": "contract IStakedCSX"
                                    }
                                  ],
                                  "id": 2380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2045:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2379,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2045:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2045:18:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2385,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2090:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2469",
                                      "typeString": "contract VestedCSX"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VestedCSX_$2469",
                                      "typeString": "contract VestedCSX"
                                    }
                                  ],
                                  "id": 2384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2082:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2383,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2082:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2082:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2389,
                                    "name": "CSX",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2241,
                                    "src": "2122:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2114:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2387,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2114:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2114:12:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2393,
                                    "name": "USDC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2238,
                                    "src": "2153:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2145:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2391,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2145:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2145:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2397,
                                    "name": "USDT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2244,
                                    "src": "2185:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$721",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2177:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2395,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2177:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2177:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 2401,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2235,
                                    "src": "2217:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IWETH_$991",
                                      "typeString": "contract IWETH"
                                    }
                                  ],
                                  "id": 2400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2209:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2399,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2209:7:13",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2209:13:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1960:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "function (address,address,address,address,address,address,address) returns (contract VestedCSXStakingContract)"
                              },
                              "typeName": {
                                "id": 2372,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 2371,
                                  "name": "VestedCSXStakingContract",
                                  "nameLocations": [
                                    "1964:24:13"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2212,
                                  "src": "1964:24:13"
                                },
                                "referencedDeclaration": 2212,
                                "src": "1964:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                                  "typeString": "contract VestedCSXStakingContract"
                                }
                              }
                            },
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1960:277:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          },
                          "src": "1929:308:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                            "typeString": "contract VestedCSXStakingContract"
                          }
                        },
                        "id": 2405,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:308:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 2413,
                              "name": "stakingContracts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "2335:16:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                                "typeString": "mapping(address => contract VestedCSXStakingContract)"
                              }
                            },
                            "id": 2416,
                            "indexExpression": {
                              "expression": {
                                "id": 2414,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2352:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2356:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2352:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2335:28:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                              "typeString": "contract VestedCSXStakingContract"
                            }
                          ],
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2327:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2327:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2327:37:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2418,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "2366:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2408,
                        "name": "CSX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2315:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$721",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2319:7:13",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 708,
                      "src": "2315:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2315:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "2315:58:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2426,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2326,
                        "src": "2469:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 2421,
                          "name": "stakingContracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2324,
                          "src": "2432:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_VestedCSXStakingContract_$2212_$",
                            "typeString": "mapping(address => contract VestedCSXStakingContract)"
                          }
                        },
                        "id": 2424,
                        "indexExpression": {
                          "expression": {
                            "id": 2422,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2449:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2453:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2449:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2432:28:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VestedCSXStakingContract_$2212",
                          "typeString": "contract VestedCSXStakingContract"
                        }
                      },
                      "id": 2425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2461:7:13",
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2045,
                      "src": "2432:36:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2428,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:44:13"
                }
              ]
            },
            "functionSelector": "6a760b80",
            "id": 2430,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2329,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2326,
                    "src": "1503:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2328,
                  "name": "mintable",
                  "nameLocations": [
                    "1494:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2263,
                  "src": "1494:8:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1494:16:13"
              },
              {
                "id": 2332,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2331,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1511:12:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "1511:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1511:12:13"
              }
            ],
            "name": "vest",
            "nameLocation": "1464:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2326,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1477:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2430,
                  "src": "1469:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:16:13"
            },
            "returnParameters": {
              "id": 2333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:0:13"
            },
            "scope": 2469,
            "src": "1455:1029:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              631
            ],
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "2715:196:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2443,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "2753:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2444,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "2759:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2445,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2436,
                        "src": "2763:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2440,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2726:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_VestedCSX_$2469_$",
                          "typeString": "type(contract super VestedCSX)"
                        }
                      },
                      "id": 2442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2732:20:13",
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 631,
                      "src": "2726:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:44:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2447,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:44:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2448,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "2785:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2801:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2793:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2449,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2793:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2793:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2785:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2454,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2434,
                        "src": "2807:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2821:1:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2813:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2455,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2813:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2813:10:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2807:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2785:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2462,
                  "nodeType": "IfStatement",
                  "src": "2781:51:13",
                  "trueBody": {
                    "functionReturnParameters": 2439,
                    "id": 2461,
                    "nodeType": "Return",
                    "src": "2825:7:13"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f6e5472616e7366657261626c65546f6b656e3a20546f6b656e207472616e7366657273206172652064697361626c65642e",
                        "id": 2464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2849:53:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        },
                        "value": "NonTransferableToken: Token transfers are disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0193edf012fb87777981141b24cf35852281993489efd7537c2403d9f7aeff7a",
                          "typeString": "literal_string \"NonTransferableToken: Token transfers are disabled.\""
                        }
                      ],
                      "id": 2463,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2842:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:61:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:61:13"
                }
              ]
            },
            "id": 2468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2600:20:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2438,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2706:8:13"
            },
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2432,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2639:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2631:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2662:2:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2654:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2436,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2683:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2675:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2620:76:13"
            },
            "returnParameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2715:0:13"
            },
            "scope": 2469,
            "src": "2591:320:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2470,
        "src": "294:2620:13",
        "usedErrors": []
      }
    ],
    "src": "63:2853:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xeD160307581Ba528A7eAA230c057edcb3f6Ec438",
      "transactionHash": "0xdca91813ffbd16181e047b3dbf05c8077b5ba04497d4f1906c15367e84442f20"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2023-04-14T13:53:29.707Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}