
[Security Analysis] Mythril version v0.23.25
[Detectors]
ArbitraryJump: Caller can redirect execution to arbitrary bytecode locations
ArbitraryStorage: Caller can write to arbitrary storage locations
ArbitraryDelegateCall: Delegatecall to a user-specified address
PredictableVariables: Control flow depends on a predictable environment variable
TxOrigin: Control flow depends on tx.origin
EtherThief: Any sender can withdraw ETH from the contract account
Exceptions: Assertion violation
ExternalCalls: External call to another contract
IntegerArithmetics: Integer overflow or underflow
MultipleSends: Multiple external calls in the same transaction
StateChangeAfterCall: State change after an external call
AccidentallyKillable: Contract can be accidentally killed by anyone
UncheckedRetval: Return value of an external call is not checked
UserAssertions: A user-defined assertion has been triggered
[Analyzing] contracts/CSX/CSXToken.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/CSXToken.sol
[Analyzing] contracts/CSX/EscrowedCSX.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/EscrowedCSX.sol
[Analyzing] contracts/CSX/mock/USDCToken.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/mock/USDCToken.sol
[Analyzing] contracts/CSX/mock/USDTToken.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/mock/USDTToken.sol
[Analyzing] contracts/CSX/mock/WETH9Mock.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/mock/WETH9Mock.sol
[Analyzing] contracts/CSX/StakedCSX.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/StakedCSX.sol
[Analyzing] contracts/CSX/VestedCSX.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/CSX/VestedCSX.sol
[Analyzing] contracts/CSX/VestedStaking.sol
Output: ==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: VestedStaking
Function name: withdraw(uint256)
PC address: 951
Estimated Gas Usage: 2834 - 2929
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: contracts/CSX/VestedStaking.sol:139

if (block.timestamp < vesting.startTime + VESTING_PERIOD) {
            revert TokensAreStillLocked();
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: decoded_data: , value: 0x0
Caller: [ATTACKER], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000000, decoded_data: (0,), value: 0x0
[Failed] to analyze contracts/CSX/VestedStaking.sol
[Analyzing] contracts/Keepers/Keepers.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Keepers/Keepers.sol
[Analyzing] contracts/Referrals/NetValueCalculator.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Referrals/NetValueCalculator.sol
[Analyzing] contracts/Referrals/ReferralRegistry.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Referrals/ReferralRegistry.sol
[Analyzing] contracts/Trade/BuyAssistoor.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Trade/BuyAssistoor.sol
[Analyzing] contracts/Trade/CSXTrade.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Trade/CSXTrade.sol
[Analyzing] contracts/TradeFactory/CSXTradeFactory.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/TradeFactory/CSXTradeFactory.sol
[Analyzing] contracts/TradeFactory/storage/TradeFactoryBaseStorage.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/TradeFactory/storage/TradeFactoryBaseStorage.sol
[Analyzing] contracts/TradeFactory/TradeFactoryBase.sol
Output: mythril.interfaces.cli [ERROR]: input files do not contain any valid contracts
[Failed] to analyze contracts/TradeFactory/TradeFactoryBase.sol
[Analyzing] contracts/Users/UserProfileLevel.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Users/UserProfileLevel.sol
[Analyzing] contracts/Users/Users.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/Users/Users.sol
[Analyzing] contracts/utils/math/Math.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/utils/math/Math.sol
[Analyzing] contracts/utils/math/SignedMath.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/utils/math/SignedMath.sol
[Analyzing] contracts/utils/Strings.sol
Output: The analysis was completed successfully. No issues were detected.
[Success] analyzing contracts/utils/Strings.sol
All 21 contracts analyzed successfully.
Tested 21 contracts:
contracts/CSX/CSXToken.sol
contracts/CSX/EscrowedCSX.sol
contracts/CSX/mock/USDCToken.sol
contracts/CSX/mock/USDTToken.sol
contracts/CSX/mock/WETH9Mock.sol
contracts/CSX/StakedCSX.sol
contracts/CSX/VestedCSX.sol
contracts/Keepers/Keepers.sol
contracts/Referrals/NetValueCalculator.sol
contracts/Referrals/ReferralRegistry.sol
contracts/Trade/BuyAssistoor.sol
contracts/Trade/CSXTrade.sol
contracts/TradeFactory/CSXTradeFactory.sol
contracts/TradeFactory/storage/TradeFactoryBaseStorage.sol
contracts/Users/UserProfileLevel.sol
contracts/Users/Users.sol
contracts/utils/math/Math.sol
contracts/utils/math/SignedMath.sol
contracts/utils/Strings.sol
